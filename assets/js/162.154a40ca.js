(window.webpackJsonp=window.webpackJsonp||[]).push([[162],{582:function(s,a,n){"use strict";n.r(a);var e=n(2),t=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"npm库-ajv-json模式验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npm库-ajv-json模式验证"}},[s._v("#")]),s._v(" npm库：AJV，JSON模式验证")]),s._v(" "),a("p",[s._v("schema  npm  node.js  javascript  4.4k 次阅读  ·  读完需要 5 分钟\nNPM酷库，每天两分钟，了解一个流行NPM库。·")]),s._v(" "),a("p",[s._v("在NPM酷库041中，我们学习了如何用validator库来验证字符串是否是Email、URL等，在开发中，除了字符串，我们还需要对更复杂的数据进行验证。比如需要Object满足那些属性，每个属性都是什么类型的，这些条件称之为数据模式验证。")]),s._v(" "),a("p",[s._v("在对数据的模式验证领域有专门的标准，叫做 JSON Schema。就是按照JSON Schema标准声明一个模式对象，然后使用模式验证工具去验证目标数据。")]),s._v(" "),a("h1",{attrs:{id:"ajv"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ajv"}},[s._v("#")]),s._v(" ajv")]),s._v(" "),a("p",[s._v("ajv 是一个非常流行的JSON Schema验证工具，并且拥有非常出众的性能表现。下方的例子中，我们使用ajv来验证用户输入的表单数据是否合法。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const Ajv = require('ajv');\n\nlet schema = {\n  type: 'object',\n  required: ['username', 'email', 'password'],\n  properties: {\n    username: {\n      type: 'string',\n      minLength: 4\n    },\n    email: {\n      type: 'string',\n      format: 'email'\n    },\n    password: {\n      type: 'string',\n      minLength: 6\n    },\n    age: {\n      type: 'integer',\n      minimum: 0\n    },\n    sex: {\n      enum: ['boy', 'girl', 'secret'],\n      default: 'secret'\n    },\n  }\n};\n\nlet ajv = new Ajv();\nlet validate = ajv.compile(schema);\n\nlet valid = validate(data);\nif (!valid) console.log(validate.errors);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br")])]),a("p",[s._v("在上述代码中，我们声明了一个数据模式"),a("code",[s._v("schema")]),s._v(" ，这个模式要求目标数据为一个对象，对象可以有五个字段 "),a("code",[s._v("username")]),s._v("、"),a("code",[s._v("email")]),s._v("、"),a("code",[s._v("password")]),s._v("、"),a("code",[s._v("age")]),s._v("、"),a("code",[s._v("sex")]),s._v("，并分别定义了五个字段的类型和数据格式要求，并且其中 "),a("code",[s._v("username、email、password")]),s._v(" 必填。然后我们使用这个模式去验证用户输入的数据 "),a("code",[s._v("data")]),s._v(" 是否满足我们的需求。")]),s._v(" "),a("p",[s._v("注意：")]),s._v(" "),a("p",[a("code",[s._v("JSON Schema")]),s._v(" 是一个声明模式描述对象的标准，并非一个库\najv 是一个"),a("code",[s._v("JSON Schema")]),s._v("标准验证器的实现，除了ajv还有很多其他的库\n代码中的 "),a("code",[s._v("schema")]),s._v(" 是使用 "),a("code",[s._v("JSON Schema")]),s._v("生成的模式描述对象\n代码中 "),a("code",[s._v("data")]),s._v(" 是我们要进行检查的数据")]),s._v(" "),a("p",[s._v("参考资料：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("JSON Schema http://json-schema.org")])]),s._v(" "),a("li",[a("p",[s._v("AJV https://github.com/epoberezki...")])])])])}),[],!1,null,null,null);a.default=t.exports}}]);