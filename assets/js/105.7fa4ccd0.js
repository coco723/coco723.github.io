(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{524:function(t,v,_){"use strict";_.r(v);var a=_(2),l=Object(a.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"前端图谱"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前端图谱"}},[t._v("#")]),t._v(" 前端图谱")]),t._v(" "),v("p",[v("img",{staticClass:"lazy",attrs:{alt:"前端图谱","data-src":"/xiangnuans/images/knowledge-graph.png",loading:"lazy"}})]),t._v(" "),v("h1",{attrs:{id:"一、javascript基础"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一、javascript基础"}},[t._v("#")]),t._v(" 一、JavaScript基础")]),t._v(" "),v("h2",{attrs:{id:"变量和类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#变量和类型"}},[t._v("#")]),t._v(" 变量和类型")]),t._v(" "),v("ul",[v("li",[t._v("1."),v("code",[t._v("JavaScript")]),t._v("规定了几种类型")]),t._v(" "),v("li",[v("ol",{attrs:{start:"2"}},[v("li",[v("code",[t._v("JavaScript")]),t._v("对象的底层数据结构是什么")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"3"}},[v("li",[v("code",[t._v("Symbol")]),t._v("类型在实际开发中的应用、可手动实现一个简单的"),v("code",[t._v("Symbol")])])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"4"}},[v("li",[v("code",[t._v("JavaScript")]),t._v("中的变量在内存中的具体存储形式")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"5"}},[v("li",[t._v("基本类型对应的内置对象，以及他们之间的装箱拆箱操作")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"6"}},[v("li",[t._v("理解值类型和引用类型")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"7"}},[v("li",[v("code",[t._v("null")]),t._v("和"),v("code",[t._v("undefined")]),t._v("的区别")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"8"}},[v("li",[t._v("至少可以说出三种判断"),v("code",[t._v("JavaScript")]),t._v("数据类型的方式，以及他们的优缺点，如何准确的判断数组类型")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"9"}},[v("li",[t._v("可能发生隐式类型类型转换的场景以及转换原则，应如何避免或巧妙应用")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"10"}},[v("li",[t._v("出现数据精度丢失的原因，"),v("code",[t._v("JavaScript")]),t._v("可以存储的最大数字、最大安全数字，"),v("code",[t._v("JavaScript")]),t._v("处理大数字的方法，避免精度丢失的方法")])])])]),t._v(" "),v("h2",{attrs:{id:"原型和原型链"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#原型和原型链"}},[t._v("#")]),t._v(" 原型和原型链")]),t._v(" "),v("ul",[v("li",[v("ol",[v("li",[t._v("理解原型设计模式以及"),v("code",[t._v("JavaScript")]),t._v("中的原型规则")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"2"}},[v("li",[v("code",[t._v("instanceof")]),t._v("的底层实现原理，手动实现一个"),v("code",[t._v("instanceof")])])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"3"}},[v("li",[t._v("实现继承的几种方式以及他们的优缺点")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"4"}},[v("li",[t._v("至少说出一种开源项目（如Node）中应用原型继承的案例")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"5"}},[v("li",[t._v("可以描述"),v("code",[t._v("new")]),t._v("一个兑现给的详细过程，手动实现一个"),v("code",[t._v("new")]),t._v("操作符")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"6"}},[v("li",[t._v("理解"),v("code",[t._v("es6 class")]),t._v("构造以及继承的底层实现原理")])])])]),t._v(" "),v("h2",{attrs:{id:"作用域和闭包"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#作用域和闭包"}},[t._v("#")]),t._v(" 作用域和闭包")]),t._v(" "),v("ul",[v("li",[v("ol",[v("li",[t._v("理解词法作用域和动态作用域")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"2"}},[v("li",[t._v("理解"),v("code",[t._v("JavaScript")]),t._v("的作用域和作用域链")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"3"}},[v("li",[t._v("理解"),v("code",[t._v("Javascript")]),t._v("的执行上下文栈，可以应用堆栈信息快速定位问题")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"4"}},[v("li",[v("code",[t._v("this")]),t._v("的原理以及几种不同使用场景的取值")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"5"}},[v("li",[t._v("闭包的实现原理和作用，可以列举几个开发中闭包的实际应用")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"6"}},[v("li",[t._v("理解堆栈一处和呃逆村泄漏的原理，如何防止")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"7"}},[v("li",[t._v("如何处理循环的异步操作")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"8"}},[v("li",[t._v("理解模块化解决的实际问题，可列举几个模块化方案并理解其中原理")])])])]),t._v(" "),v("h2",{attrs:{id:"执行机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#执行机制"}},[t._v("#")]),t._v(" 执行机制")]),t._v(" "),v("ul",[v("li",[v("ol",[v("li",[t._v("为何try里面放return，finally还会执行，理解其内部机制")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"2"}},[v("li",[v("code",[t._v("JavaScript")]),t._v("如何实现异步编程，可以详细描述"),v("code",[t._v("EventLoop")]),t._v("机制")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"3"}},[v("li",[t._v("宏任务和为任务分别有哪些")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"4"}},[v("li",[t._v("可以快速分析一个复杂的异步嵌套逻辑，并掌握分析方法")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"5"}},[v("li",[t._v("使用Promise实现串行")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"6"}},[v("li",[t._v("Node与浏览器EventLoop的差异")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"7"}},[v("li",[t._v("如何保证页面运行流畅的情况下处理海量数据")])])])]),t._v(" "),v("h2",{attrs:{id:"语法和api"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#语法和api"}},[t._v("#")]),t._v(" 语法和API")]),t._v(" "),v("ul",[v("li",[v("ol",[v("li",[t._v("理解ECMAScript和JavaScript的关系")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"2"}},[v("li",[t._v("熟悉运用es5、es6提供的语法规范")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"3"}},[v("li",[t._v("熟练掌握JavaScript提供的全局对象（例如Date、Math）、全剧函数（decodeURI、isNaN）、全局属性（例如Infinity、undefined）")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"4"}},[v("li",[t._v("熟练应用map、reduce、filter等高阶函数解决问题")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"5"}},[v("li",[t._v("setInterval需要注意的点，使用setTimeout实现setInterval")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"6"}},[v("li",[t._v("JavaScript提供的正则表达式API、可以使用正则表达式（邮箱校验、URL解析、去重等）解决常见问题")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"7"}},[v("li",[t._v("JavaScript异常处理的方式，统一的异常处理方案")])])])]),t._v(" "),v("h1",{attrs:{id:"二、html和css"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二、html和css"}},[t._v("#")]),t._v(" 二、HTML和CSS")]),t._v(" "),v("h2",{attrs:{id:"html"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#html"}},[t._v("#")]),t._v(" HTML")]),t._v(" "),v("ul",[v("li",[v("ol",[v("li",[t._v("从规范的角度理解HTML，从分类和语义的角度使用标签")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"2"}},[v("li",[t._v("常用页面标签的默认样式、自带属性、不同浏览器的差异、处理浏览器兼容问题的方式")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"3"}},[v("li",[t._v("元信息类标签（head、title、meta）的使用目的和配置方法")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"4"}},[v("li",[t._v("HTML5离线缓存原理")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"5"}},[v("li",[t._v("可以使用Canvas API、SVG等绘制高性能的动画")])])])]),t._v(" "),v("h2",{attrs:{id:"css"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#css"}},[t._v("#")]),t._v(" CSS")]),t._v(" "),v("ul",[v("li",[v("ol",[v("li",[t._v("CSS盒模型，在不同浏览器的差异")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"2"}},[v("li",[t._v("CSS所有选择器及其优先级、使用场景，那些可以继承、如何运用at规则")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"3"}},[v("li",[t._v("CSS 伪类和伪元素有哪些，它们的区别和实际应用")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"4"}},[v("li",[t._v("HTML文档的排版规则，CSS几种定位的规则、定位参照物、对文档流的英才难过，如何选择最好的定位方式，雪碧图实现原理")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"5"}},[v("li",[t._v("水平垂直居中的方案、可以实现6中以上并对比它们的优缺点")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"6"}},[v("li",[t._v("BFC实现原理，可以实现解决的问题，如何创建BFC")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"7"}},[v("li",[t._v("可使用CSS函数复用代码，实现特殊效果")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"8"}},[v("li",[t._v("PostCSS、Sass、Less的异同，以及使用配置，至少掌握一种")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"9"}},[v("li",[t._v("CSS模块化方案、如何配置按需加载、如何防止CSS阻塞渲染")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"10"}},[v("li",[t._v("熟练使用CSS实现常见动画，如渐变、移动、旋转、缩放等等")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"11"}},[v("li",[t._v("CSS浏览器兼容写法，了解不同API在不同浏览器下的兼容性情况")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"12"}},[v("li",[t._v("掌握一套完整的响应式布局方案")])])])]),t._v(" "),v("h2",{attrs:{id:"手写"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#手写"}},[t._v("#")]),t._v(" 手写")]),t._v(" "),v("ul",[v("li",[v("ol",[v("li",[t._v("图片瀑布流效果")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"2"}},[v("li",[t._v("使用CSS会值几何图形（圆形、三角形、扇形、菱形等）")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"3"}},[v("li",[t._v("使用纯CSS实现曲线运动（贝塞尔曲线）")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"4"}},[v("li",[t._v("实现常用布局（三栏、圣杯、双飞翼、吸顶），可是说出多种方式并理解其优缺点")])])])]),t._v(" "),v("h1",{attrs:{id:"三、计算机基础"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三、计算机基础"}},[t._v("#")]),t._v(" 三、计算机基础")]),t._v(" "),v("blockquote",[v("p",[t._v("关于编译原理不需要理解非常深入，但是最基本的原理和概念一定要懂，这对于学习一门编程语言非常重要")])]),t._v(" "),v("h2",{attrs:{id:"编译原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#编译原理"}},[t._v("#")]),t._v(" 编译原理")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("1.理解代码到底是什么，计算机如何将代码转换为可以运行的目标程序")])]),t._v(" "),v("li",[v("p",[t._v("2.正则表达式的匹配原理和性能优化")])]),t._v(" "),v("li",[v("p",[t._v("3.如何将JavaScript代码解析成抽象语法树(AST)")])]),t._v(" "),v("li",[v("p",[t._v("4.base64的编码原理")])]),t._v(" "),v("li",[v("p",[t._v("5.几种进制的相互转换计算方法，在JavaScript中如何表示和转换")])])]),t._v(" "),v("h2",{attrs:{id:"网络协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#网络协议"}},[t._v("#")]),t._v(" 网络协议")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("1.理解什么是协议，了解TCP/IP网络协议族的构成，每层协议在应用程序中发挥的作用")])]),t._v(" "),v("li",[v("p",[t._v("2.三次握手和四次挥手详细原理，为什么要使用这种机制")])]),t._v(" "),v("li",[v("p",[t._v("3.有哪些协议是可靠，TCP有哪些手段保证可靠交付")])]),t._v(" "),v("li",[v("p",[t._v("4.DNS的作用、DNS解析的详细过程，DNS优化原理")])]),t._v(" "),v("li",[v("p",[t._v("5.CDN的作用和原理")])]),t._v(" "),v("li",[v("p",[t._v("6.HTTP请求报文和响应报文的具体组成，能理解常见请求头的含义，有几种请求方式，区别是什么")])]),t._v(" "),v("li",[v("p",[t._v("7.HTTP所有状态码的具体含义，看到异常状态码能快速定位问题")])]),t._v(" "),v("li",[v("p",[t._v("8.HTTP1.1、HTTP2.0带来的改变")])]),t._v(" "),v("li",[v("p",[t._v("9.HTTPS的加密原理，如何开启HTTPS，如何劫持HTTPS请求")])]),t._v(" "),v("li",[v("p",[t._v("10.理解WebSocket协议的底层原理、与HTTP的区别")])])]),t._v(" "),v("h2",{attrs:{id:"设计模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#设计模式"}},[t._v("#")]),t._v(" 设计模式")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("1.熟练使用前端常用的设计模式编写代码，如单例模式、装饰器模式、代理模式等")])]),t._v(" "),v("li",[v("p",[t._v("2.发布订阅模式和观察者模式的异同以及实际应用")])]),t._v(" "),v("li",[v("p",[t._v("3.可以说出几种设计模式在开发中的实际应用，理解框架源码中对设计模式的应用")])])]),t._v(" "),v("h1",{attrs:{id:"四、数据结构和算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#四、数据结构和算法"}},[t._v("#")]),t._v(" 四、数据结构和算法")]),t._v(" "),v("blockquote",[v("p",[t._v("据我了解的大部分前端对这部分知识有些欠缺，甚至抵触，但是，如果突破更高的天花板，这部分知识是必不可少的，而且我亲身经历——非常有用！")])]),t._v(" "),v("h2",{attrs:{id:"javascript编码能力"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#javascript编码能力"}},[t._v("#")]),t._v(" JavaScript编码能力")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("1.多种方式实现数组去重、扁平化、对比优缺点")])]),t._v(" "),v("li",[v("p",[t._v("2.多种方式实现深拷贝、对比优缺点")])]),t._v(" "),v("li",[v("p",[t._v("3.手写函数柯里化工具函数、并理解其应用场景和优势")])]),t._v(" "),v("li",[v("p",[t._v("4.手写防抖和节流工具函数、并理解其内部原理和应用场景")])]),t._v(" "),v("li",[v("p",[t._v("5.实现一个sleep函数")])])]),t._v(" "),v("h2",{attrs:{id:"手动实现前端轮子"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#手动实现前端轮子"}},[t._v("#")]),t._v(" 手动实现前端轮子")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("1.手动实现call、apply、bind")])]),t._v(" "),v("li",[v("p",[t._v("2.手动实现符合Promise/A+规范的Promise、手动实现async await")])]),t._v(" "),v("li",[v("p",[t._v("3.手写一个EventEmitter实现事件发布、订阅")])]),t._v(" "),v("li",[v("p",[t._v("4.可以说出两种实现双向绑定的方案、可以手动实现")])]),t._v(" "),v("li",[v("p",[t._v("5.手写JSON.stringify、JSON.parse")])]),t._v(" "),v("li",[v("p",[t._v("6.手写一个模版引擎，并能解释其中原理")])]),t._v(" "),v("li",[v("p",[t._v("7.手写懒加载、下拉刷新、上拉加载、预加载等效果")])])]),t._v(" "),v("h2",{attrs:{id:"数据结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[t._v("#")]),t._v(" 数据结构")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("1.理解常见数据结构的特点，以及他们在不同场景下使用的优缺点")])]),t._v(" "),v("li",[v("p",[t._v("2.理解数组、字符串的存储原理，并熟练应用他们解决问题")])]),t._v(" "),v("li",[v("p",[t._v("3.理解二叉树、栈、队列、哈希表的基本结构和特点，并可以应用它解决问题")])])]),t._v(" "),v("p",[t._v("4.了解图、堆的基本结构和使用场景")]),t._v(" "),v("h2",{attrs:{id:"算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[t._v("#")]),t._v(" 算法")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("1.可计算一个算法的时间复杂度和空间复杂度，可估计业务逻辑代码的耗时和内存消耗")])]),t._v(" "),v("li",[v("p",[t._v("2.至少理解五种排序算法的实现原理、应用场景、优缺点，可快速说出时间、空间复杂度")])]),t._v(" "),v("li",[v("p",[t._v("3.了解递归和循环的优缺点、应用场景、并可在开发中熟练应用")])]),t._v(" "),v("li",[v("p",[t._v("4.可应用回溯算法、贪心算法、分治算法、动态规划等解决复杂问题")])]),t._v(" "),v("li",[v("p",[t._v("5.前端处理海量数据的算法方案")])])]),t._v(" "),v("h1",{attrs:{id:"五、运行环境"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#五、运行环境"}},[t._v("#")]),t._v(" 五、运行环境")]),t._v(" "),v("p",[t._v("我们需要理清语言和环境的关系：")]),t._v(" "),v("blockquote",[v("p",[t._v("ECMAScript描述了JavaScript语言的语法和基本对象规范")])]),t._v(" "),v("blockquote",[v("p",[t._v("浏览器作为JavaScript的一种运行环境，为它提供了：文档对象模型（DOM），描述处理网页内容的方法和接口、浏览器对象模型（BOM），描述与浏览器进行交互的方法和接口")])]),t._v(" "),v("blockquote",[v("p",[t._v("Node也是JavaScript的一种运行环境，为它提供了操作I/O、网络等API")])]),t._v(" "),v("h2",{attrs:{id:"浏览器api"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器api"}},[t._v("#")]),t._v(" 浏览器API")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("1.浏览器提供的符合W3C标准的DOM操作API、浏览器差异、兼容性")])]),t._v(" "),v("li",[v("p",[t._v("2.浏览器提供的浏览器对象模型 (BOM)提供的所有全局API、浏览器差异、兼容性")])]),t._v(" "),v("li",[v("p",[t._v("3.大量DOM操作、海量数据的性能优化(合并操作、Diff、requestAnimationFrame等)")])]),t._v(" "),v("li",[v("p",[t._v("4.浏览器海量数据存储、操作性能优化")])]),t._v(" "),v("li",[v("p",[t._v("5.DOM事件流的具体实现机制、不同浏览器的差异、事件代理")])]),t._v(" "),v("li",[v("p",[t._v("6.前端发起网络请求的几种方式及其底层实现、可以手写原生ajax、fetch、可以熟练使用第三方库")])]),t._v(" "),v("li",[v("p",[t._v("7.浏览器的同源策略，如何避免同源策略，几种方式的异同点以及如何选型")])]),t._v(" "),v("li",[v("p",[t._v("8.浏览器提供的几种存储机制、优缺点、开发中正确的选择")])]),t._v(" "),v("li",[v("p",[t._v("9.浏览器跨标签通信")])])]),t._v(" "),v("h2",{attrs:{id:"浏览器原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器原理"}},[t._v("#")]),t._v(" 浏览器原理")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("1.各浏览器使用的JavaScript引擎以及它们的异同点、如何在代码中进行区分")])]),t._v(" "),v("li",[v("p",[t._v("2.请求数据到请求结束与服务器进行了几次交互")])]),t._v(" "),v("li",[v("p",[t._v("3.可详细描述浏览器从输入URL到页面展现的详细过程")])]),t._v(" "),v("li",[v("p",[t._v("4.浏览器解析HTML代码的原理，以及构建DOM树的流程")])]),t._v(" "),v("li",[v("p",[t._v("5.浏览器如何解析CSS规则，并将其应用到DOM树上")])]),t._v(" "),v("li",[v("p",[t._v("6.浏览器如何将解析好的带有样式的DOM树进行绘制")])]),t._v(" "),v("li",[v("p",[t._v("7.浏览器的运行机制，如何配置资源异步同步加载")])]),t._v(" "),v("li",[v("p",[t._v("8.浏览器回流与重绘的底层原理，引发原因，如何有效避免")])]),t._v(" "),v("li",[v("p",[t._v("9.浏览器的垃圾回收机制，如何避免内存泄漏")])]),t._v(" "),v("li",[v("p",[t._v("10.浏览器采用的缓存方案，如何选择和控制合适的缓存方案")])])]),t._v(" "),v("h2",{attrs:{id:"node"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#node"}},[t._v("#")]),t._v(" Node")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("1.理解Node在应用程序中的作用，可以使用Node搭建前端运行环境、使用Node操作文件、操作数据库等等")])]),t._v(" "),v("li",[v("p",[t._v("2.掌握一种Node开发框架，如Express、Koa、egg的区别")])]),t._v(" "),v("li",[v("p",[t._v("3.熟练使用Node提供的API如Path、Http、Child Process等并理解其实现原理")])]),t._v(" "),v("li",[v("p",[t._v("4.Node的底层运行原理、和浏览器的异同")])]),t._v(" "),v("li",[v("p",[t._v("5.Node事件驱动、非阻塞机制的实现原理")])])]),t._v(" "),v("h1",{attrs:{id:"六、框架和类库"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#六、框架和类库"}},[t._v("#")]),t._v(" 六、框架和类库")]),t._v(" "),v("blockquote",[v("p",[t._v("轮子层出不穷，从原理上理解才是正道")])]),t._v(" "),v("h2",{attrs:{id:"typescript"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#typescript"}},[t._v("#")]),t._v(" TypeScript")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("1.理解泛型、接口等面向对象的相关概念，TypeScript对面向对象理念的实现")])]),t._v(" "),v("li",[v("p",[t._v("2.理解使用TypeScript的好处，掌握TypeScript基础语法")])]),t._v(" "),v("li",[v("p",[t._v("3.TypeScript的规则检测原理")])]),t._v(" "),v("li",[v("p",[t._v("4.可以在React、Vue等框架中使用TypeScript进行开发")])])]),t._v(" "),v("h2",{attrs:{id:"react"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#react"}},[t._v("#")]),t._v(" React")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("1.React和vue选型和优缺点、核心架构的区别")])]),t._v(" "),v("li",[v("p",[t._v("2.React中setState的执行机制，如何有效的管理状态")])]),t._v(" "),v("li",[v("p",[t._v("3.React的事件底层实现机制")])]),t._v(" "),v("li",[v("p",[t._v("4.React的虚拟DOM和Diff算法的内部实现")])]),t._v(" "),v("li",[v("p",[t._v("5.React的Fiber工作原理，解决了什么问题")])]),t._v(" "),v("li",[v("p",[t._v("6.React Router和Vue Router的底层实现原理、动态加载实现原理")])]),t._v(" "),v("li",[v("p",[t._v("7.可熟练应用React API、生命周期等，可应用HOC、render props、Hooks等高阶用法解决问题")])]),t._v(" "),v("li",[v("p",[t._v("8.基于React的特性和原理，可以手动实现一个简单的React")])])]),t._v(" "),v("h2",{attrs:{id:"多端开发"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#多端开发"}},[t._v("#")]),t._v(" 多端开发")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("1.单页面应用（SPA）的原理和优缺点，掌握一种快速开发SPA的方案")])]),t._v(" "),v("li",[v("p",[t._v("2.理解Viewport、em、rem的原理和用法，分辨率、px、ppi、dpi、dp的区别和实际应用")])]),t._v(" "),v("li",[v("p",[t._v("3.移动端页面适配解决方案、不同机型适配方案")])]),t._v(" "),v("li",[v("p",[t._v("4.掌握一种JavaScript移动客户端开发技术，如React Native：可以搭建React Native开发环境，熟练进行开发，可理解React Native的运作原理，不同端适配")])]),t._v(" "),v("li",[v("p",[t._v("5.掌握一种JavaScript PC客户端开发技术，如Electron：可搭建Electron开发环境，熟练进行开发，可理解Electron的运作原理")])]),t._v(" "),v("li",[v("p",[t._v("6.掌握一种小程序开发框架或原生小程序开发")])]),t._v(" "),v("li",[v("p",[t._v("7.理解多端框架的内部实现原理，至少了解一个多端框架的使用")])])]),t._v(" "),v("h2",{attrs:{id:"实用库"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#实用库"}},[t._v("#")]),t._v(" 实用库")]),t._v(" "),v("ul",[v("li",[v("ol",[v("li",[t._v("至少掌握一种UI组件框架，如antd design，理解其设计理念、底层实现")])])]),t._v(" "),v("li",[v("p",[t._v("2.掌握一种图表绘制框架，如Echart，理解其设计理念、底层实现，可以自己实现图表")])]),t._v(" "),v("li",[v("p",[t._v("3.掌握一种GIS开发框架，如百度地图API")])]),t._v(" "),v("li",[v("p",[t._v("4.掌握一种可视化开发框架，如Three.js、D3")])]),t._v(" "),v("li",[v("p",[t._v("5.工具函数库，如lodash、underscore、day等，理解使用的工具类或工具函数的具体实现原理")])])]),t._v(" "),v("h2",{attrs:{id:"开发和调试"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#开发和调试"}},[t._v("#")]),t._v(" 开发和调试")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("1.熟练使用各浏览器提供的调试工具")])]),t._v(" "),v("li",[v("p",[t._v("2.熟练使用一种代理工具实现请求代理、抓包，如charls")])]),t._v(" "),v("li",[v("p",[t._v("3.可以使用Android、IOS模拟器进行调试，并掌握一种真机调试方案")])]),t._v(" "),v("li",[v("p",[t._v("4.了解Vue、React等框架调试工具的使用")])])]),t._v(" "),v("h1",{attrs:{id:"七、前端工程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#七、前端工程"}},[t._v("#")]),t._v(" 七、前端工程")]),t._v(" "),v("blockquote",[v("p",[t._v("前端工程化：以工程化和工具提高开发生产效率、降低维护难度")])]),t._v(" "),v("h2",{attrs:{id:"项目构建"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#项目构建"}},[t._v("#")]),t._v(" 项目构建")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("1.理解npm、yarn依赖包管理的原理，两者的区别")])]),t._v(" "),v("li",[v("p",[t._v("2.可以使用npm运行自定义脚本")])]),t._v(" "),v("li",[v("p",[t._v("3.理解Babel、ESLint、webpack等工具在项目中承担的作用")])]),t._v(" "),v("li",[v("p",[t._v("4.ESLint规则检测原理，常用的ESLint配置")])]),t._v(" "),v("li",[v("p",[t._v("5.Babel的核心原理，可以自己编写一个Babel插件")])]),t._v(" "),v("li",[v("p",[t._v("6.可以配置一种前端代码兼容方案，如Polyfill")])]),t._v(" "),v("li",[v("p",[t._v("7.Webpack的编译原理、构建流程、热更新原理，chunk、bundle和module的区别和应用")])]),t._v(" "),v("li",[v("p",[t._v("8.可熟练配置已有的loaders和plugins解决问题，可以自己编写loaders和plugins")])])]),t._v(" "),v("h2",{attrs:{id:"nginx"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[t._v("#")]),t._v(" nginx")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("1.正向代理与反向代理的特点和实例")])]),t._v(" "),v("li",[v("p",[t._v("2.可手动搭建一个简单的nginx服务器、")])]),t._v(" "),v("li",[v("p",[t._v("3.熟练应用常用的nginx内置变量，掌握常用的匹配规则写法")])]),t._v(" "),v("li",[v("p",[t._v("4.可以用nginx实现请求过滤、配置gzip、负载均衡等，并能解释其内部原理")])])]),t._v(" "),v("h2",{attrs:{id:"开发提速"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#开发提速"}},[t._v("#")]),t._v(" 开发提速")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("1.熟练掌握一种接口管理、接口mock工具的使用，如yapi")])]),t._v(" "),v("li",[v("p",[t._v("2.掌握一种高效的日志埋点方案，可快速使用日志查询工具定位线上问题")])]),t._v(" "),v("li",[v("p",[t._v("3.理解TDD与BDD模式，至少会使用一种前端单元测试框架")])])]),t._v(" "),v("h2",{attrs:{id:"版本控制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#版本控制"}},[t._v("#")]),t._v(" 版本控制")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("1.理解Git的核心原理、工作流程、和SVN的区别")])]),t._v(" "),v("li",[v("p",[t._v("2.熟练使用常规的Git命令、git rebase、git stash等进阶命令")])]),t._v(" "),v("li",[v("p",[t._v("3.可以快速解决线上分支回滚、线上分支错误合并等复杂问题")])])]),t._v(" "),v("h2",{attrs:{id:"持续集成"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#持续集成"}},[t._v("#")]),t._v(" 持续集成")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("1.理解CI/CD技术的意义，至少熟练掌握一种CI/CD工具的使用，如Jenkins")])]),t._v(" "),v("li",[v("p",[t._v("2.可以独自完成架构设计、技术选型、环境搭建、全流程开发、部署上线等一套完整的开发流程（包括Web应用、移动客户端应用、PC客户端应用、小程序、H5等等）")])])]),t._v(" "),v("h1",{attrs:{id:"八、-项目和业务"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#八、-项目和业务"}},[t._v("#")]),t._v(" 八、 项目和业务")]),t._v(" "),v("h2",{attrs:{id:"后端技能"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#后端技能"}},[t._v("#")]),t._v(" 后端技能")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("1.了解后端的开发方式，在应用程序中的作用，至少会使用一种后端语言")])]),t._v(" "),v("li",[v("p",[t._v("2.掌握数据最终在数据库中是如何落地存储的，能看懂表结构设计、表之间的关联，至少会使用一种数据库")])])]),t._v(" "),v("h2",{attrs:{id:"性能优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[t._v("#")]),t._v(" 性能优化")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("1.了解前端性能衡量指标、性能监控要点，掌握一种前端性能监控方案")])]),t._v(" "),v("li",[v("p",[t._v("2.了解常见的Web、App性能优化方案")])]),t._v(" "),v("li",[v("p",[t._v("3.SEO排名规则、SEO优化方案、前后端分离的SEO")])]),t._v(" "),v("li",[v("p",[t._v("4.SSR实现方案、优缺点、及其性能优化")])]),t._v(" "),v("li",[v("p",[t._v("5.Webpack的性能优化方案")])]),t._v(" "),v("li",[v("p",[t._v("6.Canvas性能优化方案")])]),t._v(" "),v("li",[v("p",[t._v("7.React、Vue等框架使用性能优化方案")])])]),t._v(" "),v("h2",{attrs:{id:"前端安全"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前端安全"}},[t._v("#")]),t._v(" 前端安全")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("1.XSS攻击的原理、分类、具体案例，前端如何防御")])]),t._v(" "),v("li",[v("p",[t._v("2.CSRF攻击的原理、具体案例，前端如何防御")])]),t._v(" "),v("li",[v("p",[t._v("3.HTTP劫持、页面劫持的原理、防御措施")])])]),t._v(" "),v("h1",{attrs:{id:"九、学习提升"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#九、学习提升"}},[t._v("#")]),t._v(" 九、学习提升")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("1.拥有自己的技术博客，或者在一些博客平台上拥有自己的专栏")])]),t._v(" "),v("li",[v("p",[t._v("2.定期的将知识进行总结，不断完善自己的知识体系")])]),t._v(" "),v("li",[v("p",[t._v("3.尽量将自己的知识转换成真实的产出，不要仅仅停留在书面理解层面，更重要的是实际应用")])]),t._v(" "),v("li",[v("p",[t._v("4.坚持输出自己的代码，不要盲目的扎进公司业")])])]),t._v(" "),v("h1",{attrs:{id:"十、技术之外"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#十、技术之外"}},[t._v("#")]),t._v(" 十、技术之外")]),t._v(" "),v("p",[t._v("这部分可能比上面九条加起来重要！")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("1.了解互联网人员术语：CEO、CTO、COO、CFO、PM、QA、UI、FE、DEV、DBA、OPS等")])]),t._v(" "),v("li",[v("p",[t._v("2.了解互联网行业术语：B2B、B2C、C2C、O2O等")])]),t._v(" "),v("li",[v("p",[t._v("3.掌握互联网行业沟通、问答、学习的")])]),t._v(" "),v("li",[v("p",[t._v('4.有一定的"PPT"能力')])]),t._v(" "),v("li",[v("p",[t._v("5.有一定的理财意识，至少了解储蓄、货币基金、保险、指数基金、股票等基本的理财知识")])]),t._v(" "),v("li",[v("p",[t._v("6.掌握在繁重的工作和长期的电脑辐射的情况下保持健康的方法，建立正确的养生知识体系")])])]),t._v(" "),v("h1",{attrs:{id:""}},[v("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])])])}),[],!1,null,null,null);v.default=l.exports}}]);