(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{527:function(s,t,a){"use strict";a.r(t);var _=a(2),e=Object(_.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[t("code",[s._v("IN")]),s._v(" 和 "),t("code",[s._v("EXISTS")]),s._v(" 是 SQL 中用于过滤查询结果的两种子查询方式，它们在用法、功能和性能上有所不同。以下是它们的主要区别和性能影响：")]),s._v(" "),t("h3",{attrs:{id:"_1-基本用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本用法"}},[s._v("#")]),s._v(" 1. "),t("strong",[s._v("基本用法")])]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("IN")]),s._v(":")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("IN")]),s._v(" 用于检查某个值是否在一个特定的集合中（如列表或子查询返回的结果集中）。")]),s._v(" "),t("li",[s._v("示例："),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" department_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("IN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" departments "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" location "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'New York'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])]),s._v(" "),t("li",[s._v("这里检查 "),t("code",[s._v("department_id")]),s._v(" 是否在子查询返回的 "),t("code",[s._v("id")]),s._v(" 集合中。")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("EXISTS")]),s._v(":")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("EXISTS")]),s._v(" 用于检查子查询是否返回任何行，如果返回至少一行则为真。")]),s._v(" "),t("li",[s._v("示例："),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees e\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXISTS")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" departments d "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("department_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("location "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'New York'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])]),s._v(" "),t("li",[s._v("这里检查是否存在至少一个 "),t("code",[s._v("departments")]),s._v(" 表中的记录与 "),t("code",[s._v("employees")]),s._v(" 表中对应的 "),t("code",[s._v("department_id")]),s._v(" 匹配。")])])])]),s._v(" "),t("h3",{attrs:{id:"_2-性能比较"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-性能比较"}},[s._v("#")]),s._v(" 2. "),t("strong",[s._v("性能比较")])]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("IN")]),s._v(":")]),s._v(" "),t("ul",[t("li",[s._v("通常适用于小集合，因为 "),t("code",[s._v("IN")]),s._v(" 会将整个子查询的结果集计算出来，适合用于确定某个值是否在小范围内。")]),s._v(" "),t("li",[s._v("当 "),t("code",[s._v("IN")]),s._v(" 后面跟随一个大型的子查询结果时，可能会导致性能下降，因为需要先处理完整个结果集。")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("EXISTS")]),s._v(":")]),s._v(" "),t("ul",[t("li",[s._v("通常性能更好，尤其是当子查询的结果集较大时。因为 "),t("code",[s._v("EXISTS")]),s._v(" 在找到第一个匹配的行后就会停止查找，不需要处理完整个结果集。")]),s._v(" "),t("li",[s._v("对于相关子查询（即子查询引用外层查询的字段），"),t("code",[s._v("EXISTS")]),s._v(" 也更加高效，因为它通常会在找到第一个匹配后立即返回结果。")])])])]),s._v(" "),t("h3",{attrs:{id:"_3-适用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-适用场景"}},[s._v("#")]),s._v(" 3. "),t("strong",[s._v("适用场景")])]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("IN")]),s._v(":")]),s._v(" "),t("ul",[t("li",[s._v("适用于值集合已知或较小的情况，尤其是在静态列表中。")]),s._v(" "),t("li",[s._v("适合简单的匹配检查。")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("EXISTS")]),s._v(":")]),s._v(" "),t("ul",[t("li",[s._v("更适合动态查询，尤其是在子查询依赖外层查询的情况下。")]),s._v(" "),t("li",[s._v("适用于需要检查某种条件是否存在的场景。")])])])]),s._v(" "),t("h3",{attrs:{id:"_4-null-值的处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-null-值的处理"}},[s._v("#")]),s._v(" 4. "),t("strong",[s._v("NULL 值的处理")])]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("IN")]),s._v(":")]),s._v(" "),t("ul",[t("li",[s._v("如果 "),t("code",[s._v("IN")]),s._v(" 子句中的集合包含 NULL 值，可能会导致不明确的结果。")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("EXISTS")]),s._v(":")]),s._v(" "),t("ul",[t("li",[s._v("不受 NULL 值的影响，只要子查询返回至少一行记录，结果就会为真。")])])])]),s._v(" "),t("h3",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),t("ul",[t("li",[t("strong",[t("code",[s._v("IN")])]),s._v("：适用于小集合和已知值的匹配检查，性能较差时对于大集合。")]),s._v(" "),t("li",[t("strong",[t("code",[s._v("EXISTS")])]),s._v("：更高效，特别是对于大集合和动态查询，能够快速返回结果。")])]),s._v(" "),t("h3",{attrs:{id:"选择建议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选择建议"}},[s._v("#")]),s._v(" 选择建议")]),s._v(" "),t("p",[s._v("在实际使用中，选择 "),t("code",[s._v("IN")]),s._v(" 还是 "),t("code",[s._v("EXISTS")]),s._v(" 应根据具体场景、数据量和性能需求来定。在涉及子查询和大数据集时，通常推荐使用 "),t("code",[s._v("EXISTS")]),s._v("。")])])}),[],!1,null,null,null);t.default=e.exports}}]);