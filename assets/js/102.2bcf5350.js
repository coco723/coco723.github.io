(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{521:function(a,t,s){"use strict";s.r(t);var e=s(2),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"语义化-semantic-versioning-规范格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#语义化-semantic-versioning-规范格式"}},[a._v("#")]),a._v(" 语义化（Semantic Versioning）规范格式")]),a._v(" "),t("h2",{attrs:{id:"开源项目版本信息案例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开源项目版本信息案例"}},[a._v("#")]),a._v(" 开源项目版本信息案例")]),a._v(" "),t("ul",[t("li",[a._v("软件的版本通常由三位组成，形如：X.Y.Z")]),a._v(" "),t("li",[a._v("版本是严格递增的，比如16.1->16.2->16.3")]),a._v(" "),t("li",[a._v("在发布重要版本时，可以发布alpha，rc等先行版本")])]),a._v(" "),t("h2",{attrs:{id:"遵守server规范的优势"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#遵守server规范的优势"}},[a._v("#")]),a._v(" 遵守server规范的优势")]),a._v(" "),t("ul",[t("li",[a._v("避免出现循环依赖")]),a._v(" "),t("li",[a._v("依赖冲突减少")])]),a._v(" "),t("h2",{attrs:{id:"语义化版本-semantic-versioning-规范格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#语义化版本-semantic-versioning-规范格式"}},[a._v("#")]),a._v(" 语义化版本（Semantic Versioning）规范格式")]),a._v(" "),t("ul",[t("li",[a._v("主版本号：当你做了不兼容的API修改")]),a._v(" "),t("li",[a._v("次版本号：当你做了向下交融的功能性递增")]),a._v(" "),t("li",[a._v("修订号：当你做了向下兼容的问题修正")])]),a._v(" "),t("h2",{attrs:{id:"先行版本号"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#先行版本号"}},[a._v("#")]),a._v(" 先行版本号")]),a._v(" "),t("p",[a._v("先行版本好可以作为发布正式版之前的版本，格式是在修订版本号后面加上一个连接号（-），再加上一连串以点（.)分割的标示符，标示符可以由英文、数字和连接号（[0-9A-Za-z-]）组成。")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("alpha：是内部测试版，一般不向外部发布，会有很多Bug。一般只有测试人员使用")])]),a._v(" "),t("li",[t("p",[a._v("beta：也是测试版，这个阶段的版本会一直加入新的功能。在Alpha版之后推出")])]),a._v(" "),t("li",[t("p",[a._v("rc：Release Candidate)系统平台上就是发型候选版本。RC版不会再加入新的功能了，主要着重于出错。")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);