(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{544:function(a,s,e){"use strict";e.r(s);var n=e(2),t=Object(n.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"ffmpeg音视频处理需求升级版"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ffmpeg音视频处理需求升级版"}},[a._v("#")]),a._v(" ffmpeg音视频处理需求升级版")]),a._v(" "),s("h2",{attrs:{id:"需求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#需求"}},[a._v("#")]),a._v(" 需求")]),a._v(" "),s("p",[a._v("图片转视频、视屏拼接、音频合并、音视频合成，加视频封面（目前这条还没合并在一条命令）\n刚开始单命令实现，但是这样会产生多个中间文件，前面的文章已经介绍过了。优化，希望合并为一条命令搞定\n在次研究实现过程中踩了几个坑，记录一下：合成过程采用渐进式的方式加入每个小功能点")]),a._v(" "),s("h2",{attrs:{id:"图片转视频加背景音乐"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图片转视频加背景音乐"}},[a._v("#")]),a._v(" 图片转视频加背景音乐")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("ffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" image2 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-loop")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" img.jpg "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" s16le "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ac")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ar")]),a._v(" 16k "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" wd.pcm "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-vcodec")]),a._v(" mpeg4 output.mp4\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br")])]),s("h2",{attrs:{id:"视频拼接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#视频拼接"}},[a._v("#")]),a._v(" 视频拼接")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("ffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" v4.mp4 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" v2.mp4 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-filter_complex")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'[0:v]scale=720:1280[in1];\n                    [1:v]scale=720:1280[in2];\n                    [in1][0:a][in2][1:a] concat=n=2:v=1:a=1 [v] [a]'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:v")]),a._v(" libx264 d1.mp4\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[a._v("注意：")]),a._v(" "),s("ul",[s("li",[a._v("scale=720:1280指定统一拼接视屏的尺寸，否则 不同尺寸的的视频拼接错误")])]),a._v(" "),s("h2",{attrs:{id:"视频拼接并去除声音"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#视频拼接并去除声音"}},[a._v("#")]),a._v(" 视频拼接并去除声音")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("ffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" v4.mp4 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" v2.mp4 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-filter_complex")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'[0:v]scale=720:1280[in1];\n                    [1:v]scale=720:1280[in2];\n                    [in1][in2] concat=n=2:v=1:a=0 [v]'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:v")]),a._v(" libx264 dc1.mp4\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h2",{attrs:{id:"视频-去除声音-拼接、音频合成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#视频-去除声音-拼接、音频合成"}},[a._v("#")]),a._v(" 视频（去除声音）拼接、音频合成")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("ffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" v4.mp4 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" v2.mp4 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" audio.wav "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-filter_complex")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'[0:v]scale=720:1280[in1];\n                    [1:v]scale=720:1280[in2];\n                    [in1][in2] concat=n=2:v=1:a=0 [v]; [1:a][2:a] concat=n=2:v=0:a=1 [a]'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:v")]),a._v(" libx264 dca1.mp4\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h1",{attrs:{id:"图片转视频封面、加背景音乐、拼接视频、加音频合成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图片转视频封面、加背景音乐、拼接视频、加音频合成"}},[a._v("#")]),a._v(" 图片转视频封面、加背景音乐、拼接视频、加音频合成")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("ffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" WechatIMG612.png "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" v4.mp4 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" v2.mp4 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" audio1.wav "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" t.wav "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-filter_complex")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'[0]scale=720:1280[in0];\n                        [1:v]scale=720:1280[in1];\n                        [2:v]scale=720:1280[in2];\n                        [in0][in1][in2] concat=n=3:v=1:a=0 [v];\n                        [4:a][3:a] amix=inputs=2:duration=longest [a]'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:v")]),a._v(" libx264 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-pix_fmt")]),a._v(" yuv420p "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:a")]),a._v(" aac cc1.mp4\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br")])]),s("p",[a._v("注意：")]),a._v(" "),s("ul",[s("li",[a._v("-pix_fmt yuv420p指定可以支持 不同格式的图片转视频，否则，只支持png的格式")]),a._v(" "),s("li",[a._v("amix默认是2，所以可以只写amix,")]),a._v(" "),s("li",[a._v("duration=longest,按最长音频输出")])]),a._v(" "),s("p",[a._v("但这样写，存在问题，音频比视频长，则视频播放完成，音频会一直播放下去，需求中是按视频播放总时长")]),a._v(" "),s("p",[a._v("尝试解决方案：")]),a._v(" "),s("p",[s("strong",[a._v("方案一：amerge：但音频会按最短音频输出")])]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("ffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" t.wav "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" audio.mp3 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-filter_complex")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'[0:a][1:a] amerge [a]'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:a")]),a._v(" aac "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-b:a")]),a._v(" 256k vv.mp3\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("p",[s("strong",[a._v("方案二：join,和merge同样的")])]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("\nffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" t.wav "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" audio.mp3 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-filter_complex")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'[0:a][1:a] join [a]'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:a")]),a._v(" aac "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-b:a")]),a._v(" 256k vv.mp3\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[s("strong",[a._v("方案三：-shortest：测试结果只支持 单音频时，可以这样实现")])]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("ffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" v1.mp4 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" audio.mp3 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-filter_complex")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"[0:a][1:a]amerge=inputs=2[a]"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(":v "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"[a]"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:v")]),a._v(" copy "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:a")]),a._v(" libvorbis "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ac")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-shortest")]),a._v(" out.mp4\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("p",[s("strong",[a._v("方案四：-t在最后指定播放总时长(目前只能使用这种方式)")])]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("ffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" WechatIMG612.png "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" v4.mp4 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" v2.mp4 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" audio1.wav "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" t.wav "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-filter_complex")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'[0]scale=720:1280[in0];\n                        [1:v]scale=720:1280[in1];\n                        [2:v]scale=720:1280[in2];\n                        [in0][in1][in2] concat=n=3:v=1:a=0 [v];\n                        [4:a][3:a] amix=inputs=2:duration=longest [a]'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:v")]),a._v(" libx264 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-pix_fmt")]),a._v(" yuv420p "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:a")]),a._v(" aac "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("23")]),a._v(" cc1.mp4\n\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br")])]),s("h2",{attrs:{id:"图片转视频默认只有一帧-设定持续时长"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图片转视频默认只有一帧-设定持续时长"}},[a._v("#")]),a._v(" 图片转视频默认只有一帧，设定持续时长")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("ffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" f.png "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(".mp4 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(".mp4 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" audio.mp3 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" t.wav "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-filter_complex")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'[0]scale=720:1280,setpts=PTS+7/TB[in0];\n                        [1:v]scale=720:1280[in1];\n                        [2:v]scale=720:1280[in2];\n                        [in0][in1][in2] concat=n=3:v=1:a=0 [v];\n                        [3:a][4:a] amix [a]'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:v")]),a._v(" libx264 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-pix_fmt")]),a._v(" yuv420p "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:a")]),a._v(" aac "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("23")]),a._v(" cc1.mp4\n\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br")])]),s("ul",[s("li",[a._v("setpts=PTS+5/TB  为输出视频帧设置PTS。")]),a._v(" "),s("li",[a._v("TB: 输入时间戳的时基。")]),a._v(" "),s("li",[a._v("PTS: 输入的时间戳")])]),a._v(" "),s("h2",{attrs:{id:"音频延迟播放"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#音频延迟播放"}},[a._v("#")]),a._v(" 音频延迟播放")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("ffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" f.png "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(".mp4 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(".mp4 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" audio.mp3 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" t.wav "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-filter_complex")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'[0]scale=720:1280,setpts=PTS+6/TB[in0];\n                        [1:v]scale=720:1280[in1];\n                        [2:v]scale=720:1280[in2];\n                        [in0][in1][in2] concat=n=3:v=1:a=0 [v];\n                        [3:a][4:a] amix,adelay=1000|1000 [a]'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:v")]),a._v(" libx264 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-pix_fmt")]),a._v(" yuv420p "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:a")]),a._v(" aac "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("23")]),a._v(" cc1.mp4\n\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br")])]),s("ul",[s("li",[a._v("setpts偏移时间-adelay时间=图片视频持续时间")]),a._v(" "),s("li",[a._v("adelay=1000|1000：两个音频延迟播放时间，单位为ms")])]),a._v(" "),s("h2",{attrs:{id:"推流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#推流"}},[a._v("#")]),a._v(" 推流")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("ffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" f.jpg "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(".mp4 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" long.mp4 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" audio.mp3 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" t.wav "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-filter_complex")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'[0]scale=720:1280,setpts=PTS+6/TB[in0];\n                        [1:v]scale=720:1280[in1];\n                        [2:v]scale=720:1280[in2];\n                        [in0][in1][in2] concat=n=3:v=1:a=0 [v];\n                        [3:a]adelay=30s|30s[a3];\n                        [4:a]adelay=60s|60s[a4];\n                        [a3][a4]amix[a]'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-pix_fmt")]),a._v(" yuv420p "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:v")]),a._v(" libx264 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:a")]),a._v(" aac "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("300")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" flv "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"rtmp://..."')]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br")])]),s("h2",{attrs:{id:"本地拉流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地拉流"}},[a._v("#")]),a._v(" 本地拉流")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("ffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"https://"')]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-codec")]),a._v(" copy "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" mp4 rr.mp4\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h2",{attrs:{id:"添加水印"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加水印"}},[a._v("#")]),a._v(" 添加水印")]),a._v(" "),s("h3",{attrs:{id:"图片水印"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图片水印"}},[a._v("#")]),a._v(" 图片水印")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("ffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v(".mp4 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" sy.png "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-filter_complex")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"overlay=10:10"')]),a._v(" birds2.mp4\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"添加文字水印"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加文字水印"}},[a._v("#")]),a._v(" 添加文字水印")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("ffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v(".mp4 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-vf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("\"drawtext=fontfile=/Library/Fonts/AdobeHeitiStd-Regular.otf:text='watermark测试':x=30:y=h-30:enable='if(gte(t,3),0,1)':fontsize=24:fontcolor=white@0.7\"")]),a._v(" output.mp4\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h3",{attrs:{id:"添加水印后推流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加水印后推流"}},[a._v("#")]),a._v(" 添加水印后推流")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("\nffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" f.jpg "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(".mp4 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" long.mp4 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" audio.mp3 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" t.wav "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" sy.png "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-filter_complex")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'[0]scale=720:1280,setpts=PTS+6/TB[in0];\n                        [1:v]scale=720:1280[in1];\n                        [2:v]scale=720:1280[in2];\n                        [in0][in1][in2] concat=n=3:v=1:a=0 [v];\n                        [3:a]adelay=30s|30s[a3];\n                        [4:a]adelay=60s|60s[a4];\n                        [a3][a4]amix[a];\n                        [v][5:v]overlay[out]'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-pix_fmt")]),a._v(" yuv420p "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:v")]),a._v(" libx264 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:a")]),a._v(" aac "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("300")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" flv "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"rtmp://...."')]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br")])]),s("h3",{attrs:{id:"循环推流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环推流"}},[a._v("#")]),a._v(" 循环推流")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 循环推流")]),a._v("\n\nffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-re")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-stream_loop")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(".mp4 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:v")]),a._v(" libx264 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" flv "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"rtmp://"')]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("ul",[s("li",[a._v("overlay 添加水印")]),a._v(" "),s("li",[a._v("amix 混合音频 默认值为2")]),a._v(" "),s("li",[a._v("adelay 延迟播放时间")]),a._v(" "),s("li",[a._v("scale 分辨率大小 720:1280 手机屏的")]),a._v(" "),s("li",[a._v("setpts 图片持续时长")]),a._v(" "),s("li",[a._v("pix_fmt: yuv420p 像素格式 视频默认像素格式所有图片与视频拼接也需要转换")]),a._v(" "),s("li",[a._v("-c:v libx264视频编码")]),a._v(" "),s("li",[a._v("-c:a aac音频编码")]),a._v(" "),s("li",[a._v("-f flv 流媒体封装")])]),a._v(" "),s("p",[a._v("合并中，最重要的命令-filter_complex支持的参数")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Filters:\n  T.. = Timeline support // 时间线支持\n  .S. = Slice threading  // 切片线程\n  ..C = Command support\n  A = Audio input/output\n  V = Video input/output\n  N = Dynamic number and/or type of input/output // 动态输入/输出数和/或类型\n  | = Source or sink filter  // 源或汇滤波器\n ... abench            A->A       Benchmark part of a filtergraph.  // filtergraph的基准部分。\n ... acompressor       A->A       Audio compressor.  // 音频压缩器\n ... acontrast         A->A       Simple audio dynamic range compression/expansion filter.  // 简单的音频动态范围压缩/扩展过滤器。\n ... acopy             A->A       Copy the input audio unchanged to the output.  // 将输入音频原封不动地复制到输出。\n ... acue              A->A       Delay filtering to match a cue. // 延迟过滤以匹配提示。\n ... acrossfade        AA->A      Cross fade two input audio streams.  // 交叉淡入两个输入音频流。\n ... acrossover        A->N       Split audio into per-bands streams.  // 将音频分割为每个频带的流。\n ... acrusher          A->A       Reduce audio bit resolution. // 降低音频位分辨率。\n .S. adeclick          A->A       Remove impulsive noise from input audio.  // 去除输入音频中的脉冲噪声。\n .S. adeclip           A->A       Remove clipping from input audio. // 从输入音频中删除剪辑。\n T.. adelay            A->A       Delay one or more audio channels. // 延迟一个或多个音频通道。\n ... aderivative       A->A       Compute derivative of input audio.  // 计算输入音频的导数。\n ... aecho             A->A       Add echoing to the audio. // 在音频中添加回声。\n ... aemphasis         A->A       Audio emphasis. // 音频强调\n ... aeval             A->A       Filter audio signal according to a specified expression. // 根据指定的表达式过滤音频信号。\n T.. afade             A->A       Fade in/out input audio.   // 淡入/淡出输入音频。\n TSC afftdn            A->A       Denoise audio samples using FFT. // 使用FFT对音频样本进行去噪。\n ... afftfilt          A->A       Apply arbitrary expressions to samples in frequency domain. // 对频域中的样本应用任意表达式。\n .S. afir              AA->N      Apply Finite Impulse Response filter with supplied coefficients in 2nd stream. // 在第二个流中应用具有提供系数的有限脉冲响应滤波器\n ... aformat           A->A       Convert the input audio to one of the specified formats.  // 将输入音频转换为指定格式之一。\n ... agate             A->A       Audio gate. // 音频门\n .S. aiir              A->N       Apply Infinite Impulse Response filter with supplied coefficients.  // 应用具有提供系数的无限冲激响应滤波器。\n ... aintegral         A->A       Compute integral of input audio.  // 计算输入音频的积分。\n ... ainterleave       N->A       Temporally interleave audio inputs.  // 暂时交错音频输入。\n ... alimiter          A->A       Audio lookahead limiter.  // 音频前视限制器。\n TSC allpass           A->A       Apply a two-pole all-pass filter.  // 使用两极全通滤波器。\n ... aloop             A->A       Loop audio samples.  // 循环音频示例\n ... amerge            N->A       Merge two or more audio streams into a single multi-channel stream. // 将两个或多个音频流合并为单个多通道流。\n T.. ametadata         A->A       Manipulate audio frame metadata. //操纵音频帧元数据。\n ... amix              N->A       Audio mixing.  // 音频混合\n ... amultiply         AA->A      Multiply two audio streams.  // 将两个音频流相乘。\n ..C anequalizer       A->N       Apply high-order audio parametric multi band equalizer. // 采用高阶音频参数多波段均衡器。\n TSC anlmdn            A->A       Reduce broadband noise from stream using Non-Local Means. // 使用非本地手段减少流的宽带噪声。\n ... anull             A->A       Pass the source unchanged to the output.  // 将源不变地传递给输出。\n T.. apad              A->A       Pad audio with silence. // 用静音键播放音频。\n ... aperms            A->A       Set permissions for the output audio frame.  // 设置输出音频帧的权限\n ... aphaser           A->A       Add a phasing effect to the audio.  // 为音频添加相位效果。\n ... apulsator         A->A       Audio pulsator.  // 音频脉冲发生器。\n ... arealtime         A->A       Slow down filtering to match realtime.  // 降低过滤速度以匹配实时性。\n ... aresample         A->A       Resample audio data.  // 重新采样音频数据。\n ... areverse          A->A       Reverse an audio clip.   // 反转音频剪辑。\n ... aselect           A->N       Select audio frames to pass in output.  // 选择要传入输出的音频帧。\n ... asendcmd          A->A       Send commands to filters.  // 向筛选器发送命令。\n ... asetnsamples      A->A       Set the number of samples for each output audio frames.  // 设置每个输出音频帧的采样数。\n ... asetpts           A->A       Set PTS for the output audio frame. // 为输出音频帧设置PTS。\n ... asetrate          A->A       Change the sample rate without altering the data.  // 更改采样率而不更改数据。\n ... asettb            A->A       Set timebase for the audio output link.  // 设置音频输出链接的时基。\n ... ashowinfo         A->A       Show textual information for each audio frame.  // 显示每个音频帧的文本信息。\n T.. asidedata         A->A       Manipulate audio frame side data. // 操作音频帧侧数据\n T.. asoftclip         A->A       Audio Soft Clipper.  // 音频软剪辑。\n ... asplit            A->N       Pass on the audio input to N audio outputs.  // 把音频输入传给N个音频输出。\n ... astats            A->A       Show time domain statistics about audio frames.  // 显示有关音频帧的时域统计信息\n ..C astreamselect     N->N       Select audio streams // 选择音频流\n ..C atempo            A->A       Adjust audio tempo.  // 调整音频节奏。\n ... atrim             A->A       Pick one continuous section from the input, drop the rest.  // 从输入中选取一个连续的部分，删除其余部分。\n TSC bandpass          A->A       Apply a two-pole Butterworth band-pass filter.  // 应用两极巴特沃斯带通滤波器。\n TSC bandreject        A->A       Apply a two-pole Butterworth band-reject filter.  // 应用两极巴特沃斯带阻滤波器。\n TSC bass              A->A       Boost or cut lower frequencies.  // 提高或降低低频率。\n TSC biquad            A->A       Apply a biquad IIR filter with the given coefficients.  // 应用具有给定系数的双四IIR滤波器\n ... channelmap        A->A       Remap audio channels. // 重新映射音频通道\n ... channelsplit      A->N       Split audio into per-channel streams.  // 将音频分割为每个频道流。\n ... chorus            A->A       Add a chorus effect to the audio.  // 为音频添加合唱效果。\n ... compand           A->A       Compress or expand audio dynamic range.  // 压缩或扩展音频动态范围\n ... compensationdelay A->A       Audio Compensation Delay Line.  // 音频补偿延迟线。\n T.. crossfeed         A->A       Apply headphone crossfeed filter.  // 应用耳机交叉馈入滤波器。\n ... crystalizer       A->A       Simple expand audio dynamic range filter.  // 简单的扩展音频动态范围过滤器。\n T.. dcshift           A->A       Apply a DC shift to the audio. // 对音频应用DC移位。\n T.. deesser           A->A       Apply de-essing to the audio.  //对音频应用删除操作。\n ... drmeter           A->A       Measure audio dynamic range.  // 测量音频动态范围。\n T.. dynaudnorm        A->A       Dynamic Audio Normalizer.  // 动态音频标准化器。\n ... earwax            A->A       Widen the stereo image.  // 放大立体图像。\n ... ebur128           A->N       EBU R128 scanner.  // EBU R128扫描仪\n TSC equalizer         A->A       Apply two-pole peaking equalization (EQ) filter.  // 采用双极峰值均衡（EQ）滤波器。\n T.. extrastereo       A->A       Increase difference between stereo audio channels.  // 增加立体声音频通道之间的差异。\n ..C firequalizer      A->A       Finite Impulse Response Equalizer.  // 有限脉冲响应均衡器。\n ... flanger           A->A       Apply a flanging effect to the audio.  // 对音频应用翻边效果。\n ... haas              A->A       Apply Haas Stereo Enhancer.  // 应用Haas立体声增强剂。\n ... hdcd              A->A       Apply High Definition Compatible Digital (HDCD) decoding.  // 应用高清晰度兼容数字（HDCD）解码。\n .S. headphone         N->A       Apply headphone binaural spatialization with HRTFs in additional streams.  // 在附加流中应用耳机双耳空间化和HRTFs。\n TSC highpass          A->A       Apply a high-pass filter with 3dB point frequency. // 使用点频率为3dB的高通滤波器。\n TSC highshelf         A->A       Apply a high shelf filter. // 使用高架过滤器。\n ... join              N->A       Join multiple audio streams into multi-channel output. // 将多个音频流连接到多通道输出。\n ... loudnorm          A->A       EBU R128 loudness normalization  // EBU R128响度标准化\n TSC lowpass           A->A       Apply a low-pass filter with 3dB point frequency. // 使用点频率为3dB的低通滤波器。\n TSC lowshelf          A->A       Apply a low shelf filter.  // 使用低架过滤器。\n ... mcompand          A->A       Multiband Compress or expand audio dynamic range.  // 多波段压缩或扩展音频动态范围。\n ... pan               A->A       Remix channels with coefficients (panning).  // 带系数的混音频道（平移）\n ... replaygain        A->A       ReplayGain scanner. // 重新扫描。\n ... resample          A->A       Audio resampling and conversion.  // 音频重采样和转换。\n ..C rubberband        A->A       Apply time-stretching and pitch-shifting.  //应用时间拉伸和俯仰移位。\n ... sidechaincompress AA->A      Sidechain compressor. // 侧链压缩机。\n ... sidechaingate     AA->A      Audio sidechain gate.  // 音频侧链门\n ... silencedetect     A->A       Detect silence.  // 注意安静。\n ... silenceremove     A->A       Remove silence.  // 消除沉默。\n ... stereotools       A->A       Apply various stereo tools. // 使用各种立体声工具。\n T.. stereowiden       A->A       Apply stereo widening effect. // 应用立体加宽效果。\n ... superequalizer    A->A       Apply 18 band equalization filter. // 应用18波段均衡滤波器。\n .S. surround          A->A       Apply audio surround upmix filter. //应用音频环绕上混滤波器。\n TSC treble            A->A       Boost or cut upper frequencies.  // 提高或降低高频。\n ... tremolo           A->A       Apply tremolo effect. // 应用颤音效果。\n ... vibrato           A->A       Apply vibrato effect.  // 应用振动效果。\n T.C volume            A->A       Change input volume. // 更改输入音量。\n ... volumedetect      A->A       Detect audio volume. // 我检测到音频音量。\n ... aevalsrc          |->A       Generate an audio signal generated by an expression. // 生成由表达式生成的音频信号。\n ... anoisesrc         |->A       Generate a noise audio signal.  // 产生噪声音频信号。\n ... anullsrc          |->A       Null audio source, return empty audio frames. // 空音频源，返回空音频帧。\n ... hilbert           |->A       Generate a Hilbert transform FIR coefficients. // 生成Hilbert变换FIR系数。\n ... sinc              |->A       Generate a sinc kaiser-windowed low-pass, high-pass, band-pass, or band-reject FIR coefficients. // 生成sinc-kaiser加窗低通、高通、带通或带阻FIR系数。\n ... sine              |->A       Generate sine wave audio signal. // 产生正弦波音频信号。\n ... anullsink         A->|       Do absolutely nothing with the input audio. // 对输入音频绝对不要做任何事情。\n ... alphaextract      V->N       Extract an alpha channel as a grayscale image component. // 将alpha通道提取为灰度图像组件。\n ... alphamerge        VV->V      Copy the luma value of the second input into the alpha channel of the first input. // 将第二个输入的luma值复制到第一个输入的alpha通道中。\n .S. amplify           V->V       Amplify changes between successive video frames. // 放大连续视频帧之间的变化。\n ... ass               V->V       Render ASS subtitles onto input video using the libass library. // 使用libass库将ASS字幕呈现到输入视频上。\n TS. atadenoise        V->V       Apply an Adaptive Temporal Averaging Denoiser. // 应用自适应时间平均去噪。\n TS. avgblur           V->V       Apply Average Blur filter.  // 应用平均模糊过滤器。\n T.. bbox              V->V       Compute bounding box for each frame. // 计算每个帧的边界框。\n ... bench             V->V       Benchmark part of a filtergraph. // filtergraph的基准部分。\n T.. bitplanenoise     V->V       Measure bit plane noise.  // 测量位平面噪声。\n ... blackdetect       V->V       Detect video intervals that are (almost) black. // 检测（几乎）黑色的视频间隔。\n ... blackframe        V->V       Detect frames that are (almost) black. 检测（几乎）黑色的帧。\n TS. blend             VV->V      Blend two video frames into each other. // 将两个视频帧混合在一起。\n TS. bm3d              N->V       Block-Matching 3D denoiser. // 块匹配三维去噪。\n T.. boxblur           V->V       Blur the input.  // 虚输入\n TS. bwdif             V->V       Deinterlace the input image.  // 取消输入图像的隔行扫描\n TS. chromahold        V->V       Turns a certain color range into gray.  // 将某个颜色范围转换为灰色。\n TS. chromakey         V->V       Turns a certain color into transparency. Operates on YUV colors. // 将某个颜色转换为透明。对YUV颜色进行操作。\n TS. chromashift       V->V       Shift chroma. // 变色\n ... ciescope          V->V       Video CIE scope.  // 视频CIE示波器。\n T.. codecview         V->V       Visualize information about some codecs. // 可视化一些编解码器的信息。\n TS. colorbalance      V->V       Adjust the color balance.  // 调整颜色平衡。\n TS. colorchannelmixer V->V       Adjust colors by mixing color channels.  // 通过混合颜色通道调节颜色。\n TS. colorkey          V->V       Turns a certain color into transparency. Operates on RGB colors. // 将某个颜色转换为透明。对RGB颜色进行操作。\n TS. colorhold         V->V       Turns a certain color range into gray. Operates on RGB colors. // 将某个颜色范围转换为灰色。对RGB颜色进行操作。\n TS. colorlevels       V->V       Adjust the color levels. // 调整颜色级别。\n TS. colormatrix       V->V       Convert color matrix. // 转换颜色矩阵。\n TS. colorspace        V->V       Convert between color spaces. // 在颜色空间之间转换。\n TS. convolution       V->V       Apply convolution filter. // 应用卷积滤波器\n TS. convolve          VV->V      Convolve first video stream with second video stream.  // 将第一视频流与第二视频流卷积。\n ... copy              V->V       Copy the input video unchanged to the output.  // 将输入视频原封不动地复制到输出。\n ... coreimage         V->V       Video filtering using CoreImage API.  // 使用CoreImage API进行视频过滤。\n ... cover_rect        V->V       Find and cover a user specified object. // 查找并覆盖用户指定的对象。\n ..C crop              V->V       Crop the input video.  // 裁剪输入视频\n T.. cropdetect        V->V       Auto-detect crop size. // 自动检测作物大小。\n ... cue               V->V       Delay filtering to match a cue. // 延迟过滤以匹配提示。\n TS. curves            V->V       Adjust components curves. // 调整组件曲线\n .S. datascope         V->V       Video data analysis. // 视频数据分析。\n TS. dctdnoiz          V->V       Denoise frames using 2D DCT.  // 使用2D-DCT对帧进行去噪。\n TS. deband            V->V       Debands video. // 辩论录像。\n T.. deblock           V->V       Deblock video. // 解除锁定视频。\n ... decimate          N->V       Decimate frames (post field matching filter).  // 抽取帧（后期字段匹配过滤器）。\n TS. deconvolve        VV->V      Deconvolve first video stream with second video stream. // 用第二视频流解卷第一视频流。\n TS. dedot             V->V       Reduce cross-luminance and cross-color.  // 降低交叉亮度和交叉颜色。\n TS. deflate           V->V       Apply deflate effect.  // 应用放气效果。\n ... deflicker         V->V       Remove temporal frame luminance variations.  // 移除时间帧亮度变化。\n ... dejudder          V->V       Remove judder produced by pullup.  // 去除拉起产生的抖动。\n T.. delogo            V->V       Remove logo from input video.  // 从输入视频中删除徽标。\n T.. derain            V->V       Apply derain filter to the input. 在输入端加上减额滤波器。\n ... deshake           V->V       Stabilize shaky video. // 稳定不稳定的视频。\n TS. despill           V->V       Despill video. // 视频系统。\n ... detelecine        V->V       Apply an inverse telecine pattern. // 应用相反的电视电影模式。\n TS. dilation          V->V       Apply dilation effect. // 应用扩张效果。\n T.. displace          VVV->V     Displace pixels.\n ... doubleweave       V->V       Weave input video fields into double number of frames.\n T.. drawbox           V->V       Draw a colored box on the input video.\n ... drawgraph         V->V       Draw a graph using input video metadata.\n T.. drawgrid          V->V       Draw a colored grid on the input video.\n T.C drawtext          V->V       Draw text on top of video frames using libfreetype library.\n T.. edgedetect        V->V       Detect and draw edge.\n ... elbg              V->V       Apply posterize effect, using the ELBG algorithm.\n T.. entropy           V->V       Measure video frames entropy.\n T.C eq                V->V       Adjust brightness, contrast, gamma, and saturation.\n TS. erosion           V->V       Apply erosion effect.\n ... extractplanes     V->N       Extract planes as grayscale frames.\n .S. fade              V->V       Fade in/out input video.\n T.. fftdnoiz          V->V       Denoise frames using 3D FFT.\n T.. fftfilt           V->V       Apply arbitrary expressions to pixels in frequency domain.\n ... field             V->V       Extract a field from the input video.\n ... fieldhint         V->V       Field matching using hints.\n ... fieldmatch        N->V       Field matching for inverse telecine.\n T.. fieldorder        V->V       Set the field order.\n T.. fillborders       V->V       Fill borders of the input video.\n ... find_rect         V->V       Find a user specified object.\n T.. floodfill         V->V       Fill area with same color with another color.\n ... format            V->V       Convert the input video to one of the specified pixel formats.\n ... fps               V->V       Force constant framerate.\n ... framepack         VV->V      Generate a frame packed stereoscopic video.\n .S. framerate         V->V       Upsamples or downsamples progressive source between specified frame rates.\n T.. framestep         V->V       Select one frame every N frames.\n ... freezedetect      V->V       Detects frozen video input.\n ... frei0r            V->V       Apply a frei0r effect.\n T.. fspp              V->V       Apply Fast Simple Post-processing filter.\n TS. gblur             V->V       Apply Gaussian Blur filter.\n TS. geq               V->V       Apply generic equation to each pixel.\n T.. gradfun           V->V       Debands video quickly using gradients.\n ... graphmonitor      V->V       Show various filtergraph stats.\n TS. greyedge          V->V       Estimates scene illumination by grey edge assumption.\n TS. haldclut          VV->V      Adjust colors using a Hald CLUT.\n TS. hflip             V->V       Horizontally flip the input video.\n T.. histeq            V->V       Apply global color histogram equalization.\n ... histogram         V->V       Compute and draw a histogram.\n T.. hqdn3d            V->V       Apply a High Quality 3D Denoiser.\n .S. hqx               V->V       Scale the input by 2, 3 or 4 using the hq*x magnification algorithm.\n ... hstack            N->V       Stack video inputs horizontally.\n T.C hue               V->V       Adjust the hue and saturation of the input video.\n ... hwdownload        V->V       Download a hardware frame to a normal frame\n ... hwmap             V->V       Map hardware frames\n ... hwupload          V->V       Upload a normal frame to a hardware frame\n T.. hysteresis        VV->V      Grow first stream into second stream by connecting components.\n ... idet              V->V       Interlace detect Filter.\n T.. il                V->V       Deinterleave or interleave fields.\n TS. inflate           V->V       Apply inflate effect.\n ... interlace         V->V       Convert progressive video into interlaced.\n ... interleave        N->V       Temporally interleave video inputs.\n ... kerndeint         V->V       Apply kernel deinterlacing to the input.\n .S. lagfun            V->V       Slowly update darker pixels.\n .S. lenscorrection    V->V       Rectify the image by correcting for lens distortion. // 通过校正镜头失真来校正图像。\n TS. limiter           V->V       Limit pixels components to the specified range.\n ... loop              V->V       Loop video frames. // 循环视频帧。\n TS. lumakey           V->V       Turns a certain luma into transparency.\n TS. lut               V->V       Compute and apply a lookup table to the RGB/YUV input video.\n TS. lut1d             V->V       Adjust colors using a 1D LUT.\n TS. lut2              VV->V      Compute and apply a lookup table from two video inputs. // 从两个视频输入计算并应用查找表。\n TS. lut3d             V->V       Adjust colors using a 3D LUT.\n TS. lutrgb            V->V       Compute and apply a lookup table to the RGB input video.\n TS. lutyuv            V->V       Compute and apply a lookup table to the YUV input video.\n TS. maskedclamp       VVV->V     Clamp first stream with second stream and third stream. // 用第二流和第三流夹住第一流。\n TS. maskedmerge       VVV->V     Merge first stream with second stream using third stream as mask. // 使用第三流作为掩码将第一流与第二流合并\n TS. maskfun           V->V       Create Mask.\n ... mcdeint           V->V       Apply motion compensating deinterlacing.\n ... mergeplanes       N->V       Merge planes.\n ... mestimate         V->V       Generate motion vectors.\n T.. metadata          V->V       Manipulate video frame metadata.\n T.. midequalizer      VV->V      Apply Midway Equalization.\n ... minterpolate      V->V       Frame rate conversion using Motion Interpolation.\n .S. mix               N->V       Mix video inputs.\n ... mpdecimate        V->V       Remove near-duplicate frames.\n TS. negate            V->V       Negate input video.  // 否定输入视频。\n TS. nlmeans           V->V       Non-local means denoiser.\n T.. nnedi             V->V       Apply neural network edge directed interpolation intra-only deinterlacer.\n ... noformat          V->V       Force libavfilter not to use any of the specified pixel formats for the input to the next filter.\n TS. noise             V->V       Add noise.\n T.. normalize         V->V       Normalize RGB video.  // 标准化RGB视频\n ... null              V->V       Pass the source unchanged to the output.\n ... ocr               V->V       Optical Character Recognition.\n T.. oscilloscope      V->V       2D Video Oscilloscope.\n TSC overlay           VV->V      Overlay a video source on top of the input.  // 在输入端覆盖视频源\n T.. owdenoise         V->V       Denoise using wavelets.\n ... pad               V->V       Pad the input video.  // 把输入的视频垫上\n ... palettegen        V->V       Find the optimal palette for a given stream.\n ... paletteuse        VV->V      Use a palette to downsample an input video stream.  // 使用调色板缩小输入视频流的采样。\n ... perms             V->V       Set permissions for the output video frame.  // 设置输出视频帧的权限。\n TS. perspective       V->V       Correct the perspective of video.  // 纠正视频的透视图。\n T.. phase             V->V       Phase shift fields.\n ... pixdesctest       V->V       Test pixel format definitions.\n T.. pixscope          V->V       Pixel data analysis.\n T.C pp                V->V       Filter video using libpostproc.  // 使用libpostproc过滤视频。\n T.. pp7               V->V       Apply Postprocessing 7 filter.\n TS. premultiply       N->V       PreMultiply first stream with first plane of second stream.\n TS. prewitt           V->V       Apply prewitt operator.\n T.. pseudocolor       V->V       Make pseudocolored video frames.  // 制作假彩色视频帧。\n ... psnr              VV->V      Calculate the PSNR between two video streams. // 计算两个视频流之间的PSNR。\n ... pullup            V->V       Pullup from field sequence to frames.\n T.. qp                V->V       Change video quantization parameters.  // 更改视频量化参数。\n ... random            V->V       Return random frames.\n T.. readeia608        V->V       Read EIA-608 Closed Caption codes from input video and write them to frame metadata.  // 从输入视频中读取EIA-608闭路字幕代码，并将其写入帧元数据。\n ... readvitc          V->V       Read vertical interval timecode and write it to frame metadata.\n ... realtime          V->V       Slow down filtering to match realtime.\n TS. remap             VVV->V     Remap pixels.  // 大括号像素。\n TS. removegrain       V->V       Remove grain.\n T.. removelogo        V->V       Remove a TV logo based on a mask image. // 移除基于遮罩图像的电视徽标\n ... repeatfields      V->V       Hard repeat fields based on MPEG repeat field flag.\n ... reverse           V->V       Reverse a clip.\n TS. rgbashift         V->V       Shift RGBA.\n TS. roberts           V->V       Apply roberts cross operator.\n TSC rotate            V->V       Rotate the input image.  // 旋转输入图像。\n T.. sab               V->V       Apply shape adaptive blur.\n ..C scale             V->V       Scale the input video size and/or convert the image format. // 缩放输入视频大小和/或转换图像格式。\n ..C scale2ref         VV->VV     Scale the input video size and/or convert the image format to the given reference. // 缩放输入视频大小和/或将图像格式转换为给定的参考。\n ... select            V->N       Select video frames to pass in output.  // 选择要传入输出的视频帧。\n TS. selectivecolor    V->V       Apply CMYK adjustments to specific color ranges.\n ... sendcmd           V->V       Send commands to filters.\n ... separatefields    V->V       Split input video frames into fields.  // 将输入的视频帧分割为多个字段。\n ... setdar            V->V       Set the frame display aspect ratio.\n ... setfield          V->V       Force field for the output video frame.  // 输出视频帧的力场。\n ... setparams         V->V       Force field, or color property for the output video frame.  // 输出视频帧的力场或颜色属性。\n ... setpts            V->V       Set PTS for the output video frame.   // 为输出视频帧设置PTS。\n ... setrange          V->V       Force color range for the output video frame.  // 强制输出视频帧的颜色范围。\n ... setsar            V->V       Set the pixel sample aspect ratio.\n ... settb             V->V       Set timebase for the video output link.  // 设置视频输出链接的时基。\n ... showinfo          V->V       Show textual information for each video frame.  // 显示每个视频帧的文本信息。\n T.. showpalette       V->V       Display frame palette.\n T.. shuffleframes     V->V       Shuffle video frames.   // 随机播放视频帧。\n T.. shuffleplanes     V->V       Shuffle video planes.\n T.. sidedata          V->V       Manipulate video frame side data.\n .S. signalstats       V->V       Generate statistics from video analysis.  // 从视频分析生成统计信息。\n ... signature         N->V       Calculate the MPEG-7 video signature  // 计算MPEG-7视频签名\n T.. smartblur         V->V       Blur the input video without impacting the outlines.  // 在不影响轮廓的情况下模糊输入视频。\n TS. sobel             V->V       Apply sobel operator.\n ... split             V->N       Pass on the input to N video outputs.  // 将输入传给N个视频输出。\n T.C spp               V->V       Apply a simple post processing filter.\n T.. sr                V->V       Apply DNN-based image super resolution to the input. // 对输入应用基于DNN的图像超分辨率。\n ... ssim              VV->V      Calculate the SSIM between two video streams.  // 计算两个视频流之间的SSIM。\n .S. stereo3d          V->V       Convert video stereoscopic 3D view.  // 转换视频立体三维视图。\n ..C streamselect      N->N       Select video streams  // 选择视频流\n ... subtitles         V->V       Render text subtitles onto input video using the libass library.\n ... super2xsai        V->V       Scale the input by 2x using the Super2xSaI pixel art algorithm.\n T.. swaprect          V->V       Swap 2 rectangular objects in video.  // 换视频中的两个矩形对象。\n T.. swapuv            V->V       Swap U and V components.\n TS. tblend            V->V       Blend successive frames.\n ... telecine          V->V       Apply a telecine pattern.\n TS. threshold         VVVV->V    Threshold first video stream using other video streams.  // 使用其他视频流的阈值第一视频流。\n ... thumbnail         V->V       Select the most representative frame in a given sequence of consecutive frames.\n ... tile              V->V       Tile several successive frames together.\n ... tinterlace        V->V       Perform temporal field interlacing.\n TS. tlut2             V->V       Compute and apply a lookup table from two successive frames.\n TS. tmix              V->V       Mix successive video frames.  // 混合连续的视频帧。\n .S. tonemap           V->V       Conversion to/from different dynamic ranges.\n ... tpad              V->V       Temporarily pad video frames.  // 临时填充视频帧。\n .S. transpose         V->V       Transpose input video.  // 转置输入视频。\n ... trim              V->V       Pick one continuous section from the input, drop the rest.\n TS. unpremultiply     N->V       UnPreMultiply first stream with first plane of second stream.\n TS. unsharp           V->V       Sharpen or blur the input video.  // 锐化或模糊输入视频\n T.. uspp              V->V       Apply Ultra Simple / Slow Post-processing filter.\n T.. vaguedenoiser     V->V       Apply a Wavelet based Denoiser.\n ... vectorscope       V->V       Video vectorscope.\n T.. vflip             V->V       Flip the input video vertically.  // 垂直翻转输入视频。\n ... vfrdet            V->V       Variable frame rate detect filter.\n TS. vibrance          V->V       Boost or alter saturation.\n ... vidstabdetect     V->V       Extract relative transformations, pass 1 of 2 for stabilization (see vidstabtransform for pass 2).\n ... vidstabtransform  V->V       Transform the frames, pass 2 of 2 for stabilization (see vidstabdetect for pass 1).\n T.. vignette          V->V       Make or reverse a vignette effect.\n ... vmafmotion        V->V       Calculate the VMAF Motion score.\n ... vstack            N->V       Stack video inputs vertically.  // 垂直堆叠视频输入。\n TS. w3fdif            V->V       Apply Martin Weston three field deinterlace.\n .S. waveform          V->V       Video waveform monitor.\n ... weave             V->V       Weave input video fields into frames.  // 将输入的视频字段编织成帧。\n .S. xbr               V->V       Scale the input using xBR algorithm.\n .S. xmedian           N->V       Pick median pixels from several video inputs. // 从多个视频输入中选取中值像素。\n ... xstack            N->V       Stack video inputs into custom layout.  // 将视频输入堆叠到自定义布局中。\n TS. yadif             V->V       Deinterlace the input image. // 取消输入图像的隔行扫描。\n ... zoompan           V->V       Apply Zoom & Pan effect.\n ... allrgb            |->V       Generate all RGB colors.\n ... allyuv            |->V       Generate all yuv colors.\n ... cellauto          |->V       Create pattern generated by an elementary cellular automaton.\n ..C color             |->V       Provide an uniformly colored input.\n ... coreimagesrc      |->V       Video source using image generators of CoreImage API. // 使用CoreImage API的图像生成器的视频源。\n ... frei0r_src        |->V       Generate a frei0r source.\n ... haldclutsrc       |->V       Provide an identity Hald CLUT.\n ... life              |->V       Create life.\n ... mandelbrot        |->V       Render a Mandelbrot fractal.\n ... mptestsrc         |->V       Generate various test pattern.\n ... nullsrc           |->V       Null video source, return unprocessed video frames.  // 空视频源，返回未处理的视频帧。\n ... pal75bars         |->V       Generate PAL 75% color bars.\n ... pal100bars        |->V       Generate PAL 100% color bars.\n ... rgbtestsrc        |->V       Generate RGB test pattern.\n ... smptebars         |->V       Generate SMPTE color bars.\n ... smptehdbars       |->V       Generate SMPTE HD color bars.\n ... testsrc           |->V       Generate test pattern.\n ... testsrc2          |->V       Generate another test pattern.\n ... yuvtestsrc        |->V       Generate YUV test pattern.\n ... nullsink          V->|       Do absolutely nothing with the input video.  // 对输入的视频绝对不要做任何事情。\n ... abitscope         A->V       Convert input audio to audio bit scope video output.  // 将输入音频转换为音频位范围视频输出。\n ... adrawgraph        A->V       Draw a graph using input audio metadata.\n ... agraphmonitor     A->V       Show various filtergraph stats.\n ... ahistogram        A->V       Convert input audio to histogram video output.  // 将输入音频转换为直方图视频输出。\n ... aphasemeter       A->N       Convert input audio to phase meter video output.  // 将输入音频转换为相位计视频输出。\n ... avectorscope      A->V       Convert input audio to vectorscope video output.  // 将输入音频转换为矢量示波器视频输出。\n ..C concat            N->N       Concatenate audio and video streams.  // 连接音频和视频流。\n ... showcqt           A->V       Convert input audio to a CQT (Constant/Clamped Q Transform) spectrum video output.  // 将输入音频转换为CQT（恒定/钳制Q变换）频谱视频输出。\n ... showfreqs         A->V       Convert input audio to a frequencies video output.  // 将输入音频转换为频率视频输出。\n .S. showspatial       A->V       Convert input audio to a spatial video output.  // 将输入音频转换为空间视频输出。\n .S. showspectrum      A->V       Convert input audio to a spectrum video output.  // 将输入音频转换为频谱视频输出。\n .S. showspectrumpic   A->V       Convert input audio to a spectrum video output single picture.  // 将输入音频转换为频谱视频输出单个图片。\n ... showvolume        A->V       Convert input audio volume to video output.  // 输入音频音量转换为视频输出。\n ... showwaves         A->V       Convert input audio to a video output.  // 将输入音频转换为视频输出。\n ... showwavespic      A->V       Convert input audio to a video output single picture.  // 将输入音频转换为视频输出单个图片。\n ... spectrumsynth     VV->A      Convert input spectrum videos to audio output. // 将输入频谱视频转换为音频输出。\n ..C amovie            |->N       Read audio from a movie source.\n ..C movie             |->N       Read from a movie source.\n ... afifo             A->A       Buffer input frames and send them when they are requested.\n ... fifo              V->V       Buffer input images and send them when they are requested.\n ... abuffer           |->A       Buffer audio frames, and make them accessible to the filterchain.\n ... buffer            |->V       Buffer video frames, and make them accessible to the filterchain.  // 缓冲视频帧，并使其可被过滤器链访问。\n ... abuffersink       A->|       Buffer audio frames, and make them available to the end of the filter graph.  // 缓冲音频帧，并使它们在过滤图的末尾可用。\n ... buffersink        V->|       Buffer video frames, and make them available to the end of the filter graph. // 缓冲视频帧，并使它们在过滤图的末尾可用。\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br"),s("span",{staticClass:"line-number"},[a._v("25")]),s("br"),s("span",{staticClass:"line-number"},[a._v("26")]),s("br"),s("span",{staticClass:"line-number"},[a._v("27")]),s("br"),s("span",{staticClass:"line-number"},[a._v("28")]),s("br"),s("span",{staticClass:"line-number"},[a._v("29")]),s("br"),s("span",{staticClass:"line-number"},[a._v("30")]),s("br"),s("span",{staticClass:"line-number"},[a._v("31")]),s("br"),s("span",{staticClass:"line-number"},[a._v("32")]),s("br"),s("span",{staticClass:"line-number"},[a._v("33")]),s("br"),s("span",{staticClass:"line-number"},[a._v("34")]),s("br"),s("span",{staticClass:"line-number"},[a._v("35")]),s("br"),s("span",{staticClass:"line-number"},[a._v("36")]),s("br"),s("span",{staticClass:"line-number"},[a._v("37")]),s("br"),s("span",{staticClass:"line-number"},[a._v("38")]),s("br"),s("span",{staticClass:"line-number"},[a._v("39")]),s("br"),s("span",{staticClass:"line-number"},[a._v("40")]),s("br"),s("span",{staticClass:"line-number"},[a._v("41")]),s("br"),s("span",{staticClass:"line-number"},[a._v("42")]),s("br"),s("span",{staticClass:"line-number"},[a._v("43")]),s("br"),s("span",{staticClass:"line-number"},[a._v("44")]),s("br"),s("span",{staticClass:"line-number"},[a._v("45")]),s("br"),s("span",{staticClass:"line-number"},[a._v("46")]),s("br"),s("span",{staticClass:"line-number"},[a._v("47")]),s("br"),s("span",{staticClass:"line-number"},[a._v("48")]),s("br"),s("span",{staticClass:"line-number"},[a._v("49")]),s("br"),s("span",{staticClass:"line-number"},[a._v("50")]),s("br"),s("span",{staticClass:"line-number"},[a._v("51")]),s("br"),s("span",{staticClass:"line-number"},[a._v("52")]),s("br"),s("span",{staticClass:"line-number"},[a._v("53")]),s("br"),s("span",{staticClass:"line-number"},[a._v("54")]),s("br"),s("span",{staticClass:"line-number"},[a._v("55")]),s("br"),s("span",{staticClass:"line-number"},[a._v("56")]),s("br"),s("span",{staticClass:"line-number"},[a._v("57")]),s("br"),s("span",{staticClass:"line-number"},[a._v("58")]),s("br"),s("span",{staticClass:"line-number"},[a._v("59")]),s("br"),s("span",{staticClass:"line-number"},[a._v("60")]),s("br"),s("span",{staticClass:"line-number"},[a._v("61")]),s("br"),s("span",{staticClass:"line-number"},[a._v("62")]),s("br"),s("span",{staticClass:"line-number"},[a._v("63")]),s("br"),s("span",{staticClass:"line-number"},[a._v("64")]),s("br"),s("span",{staticClass:"line-number"},[a._v("65")]),s("br"),s("span",{staticClass:"line-number"},[a._v("66")]),s("br"),s("span",{staticClass:"line-number"},[a._v("67")]),s("br"),s("span",{staticClass:"line-number"},[a._v("68")]),s("br"),s("span",{staticClass:"line-number"},[a._v("69")]),s("br"),s("span",{staticClass:"line-number"},[a._v("70")]),s("br"),s("span",{staticClass:"line-number"},[a._v("71")]),s("br"),s("span",{staticClass:"line-number"},[a._v("72")]),s("br"),s("span",{staticClass:"line-number"},[a._v("73")]),s("br"),s("span",{staticClass:"line-number"},[a._v("74")]),s("br"),s("span",{staticClass:"line-number"},[a._v("75")]),s("br"),s("span",{staticClass:"line-number"},[a._v("76")]),s("br"),s("span",{staticClass:"line-number"},[a._v("77")]),s("br"),s("span",{staticClass:"line-number"},[a._v("78")]),s("br"),s("span",{staticClass:"line-number"},[a._v("79")]),s("br"),s("span",{staticClass:"line-number"},[a._v("80")]),s("br"),s("span",{staticClass:"line-number"},[a._v("81")]),s("br"),s("span",{staticClass:"line-number"},[a._v("82")]),s("br"),s("span",{staticClass:"line-number"},[a._v("83")]),s("br"),s("span",{staticClass:"line-number"},[a._v("84")]),s("br"),s("span",{staticClass:"line-number"},[a._v("85")]),s("br"),s("span",{staticClass:"line-number"},[a._v("86")]),s("br"),s("span",{staticClass:"line-number"},[a._v("87")]),s("br"),s("span",{staticClass:"line-number"},[a._v("88")]),s("br"),s("span",{staticClass:"line-number"},[a._v("89")]),s("br"),s("span",{staticClass:"line-number"},[a._v("90")]),s("br"),s("span",{staticClass:"line-number"},[a._v("91")]),s("br"),s("span",{staticClass:"line-number"},[a._v("92")]),s("br"),s("span",{staticClass:"line-number"},[a._v("93")]),s("br"),s("span",{staticClass:"line-number"},[a._v("94")]),s("br"),s("span",{staticClass:"line-number"},[a._v("95")]),s("br"),s("span",{staticClass:"line-number"},[a._v("96")]),s("br"),s("span",{staticClass:"line-number"},[a._v("97")]),s("br"),s("span",{staticClass:"line-number"},[a._v("98")]),s("br"),s("span",{staticClass:"line-number"},[a._v("99")]),s("br"),s("span",{staticClass:"line-number"},[a._v("100")]),s("br"),s("span",{staticClass:"line-number"},[a._v("101")]),s("br"),s("span",{staticClass:"line-number"},[a._v("102")]),s("br"),s("span",{staticClass:"line-number"},[a._v("103")]),s("br"),s("span",{staticClass:"line-number"},[a._v("104")]),s("br"),s("span",{staticClass:"line-number"},[a._v("105")]),s("br"),s("span",{staticClass:"line-number"},[a._v("106")]),s("br"),s("span",{staticClass:"line-number"},[a._v("107")]),s("br"),s("span",{staticClass:"line-number"},[a._v("108")]),s("br"),s("span",{staticClass:"line-number"},[a._v("109")]),s("br"),s("span",{staticClass:"line-number"},[a._v("110")]),s("br"),s("span",{staticClass:"line-number"},[a._v("111")]),s("br"),s("span",{staticClass:"line-number"},[a._v("112")]),s("br"),s("span",{staticClass:"line-number"},[a._v("113")]),s("br"),s("span",{staticClass:"line-number"},[a._v("114")]),s("br"),s("span",{staticClass:"line-number"},[a._v("115")]),s("br"),s("span",{staticClass:"line-number"},[a._v("116")]),s("br"),s("span",{staticClass:"line-number"},[a._v("117")]),s("br"),s("span",{staticClass:"line-number"},[a._v("118")]),s("br"),s("span",{staticClass:"line-number"},[a._v("119")]),s("br"),s("span",{staticClass:"line-number"},[a._v("120")]),s("br"),s("span",{staticClass:"line-number"},[a._v("121")]),s("br"),s("span",{staticClass:"line-number"},[a._v("122")]),s("br"),s("span",{staticClass:"line-number"},[a._v("123")]),s("br"),s("span",{staticClass:"line-number"},[a._v("124")]),s("br"),s("span",{staticClass:"line-number"},[a._v("125")]),s("br"),s("span",{staticClass:"line-number"},[a._v("126")]),s("br"),s("span",{staticClass:"line-number"},[a._v("127")]),s("br"),s("span",{staticClass:"line-number"},[a._v("128")]),s("br"),s("span",{staticClass:"line-number"},[a._v("129")]),s("br"),s("span",{staticClass:"line-number"},[a._v("130")]),s("br"),s("span",{staticClass:"line-number"},[a._v("131")]),s("br"),s("span",{staticClass:"line-number"},[a._v("132")]),s("br"),s("span",{staticClass:"line-number"},[a._v("133")]),s("br"),s("span",{staticClass:"line-number"},[a._v("134")]),s("br"),s("span",{staticClass:"line-number"},[a._v("135")]),s("br"),s("span",{staticClass:"line-number"},[a._v("136")]),s("br"),s("span",{staticClass:"line-number"},[a._v("137")]),s("br"),s("span",{staticClass:"line-number"},[a._v("138")]),s("br"),s("span",{staticClass:"line-number"},[a._v("139")]),s("br"),s("span",{staticClass:"line-number"},[a._v("140")]),s("br"),s("span",{staticClass:"line-number"},[a._v("141")]),s("br"),s("span",{staticClass:"line-number"},[a._v("142")]),s("br"),s("span",{staticClass:"line-number"},[a._v("143")]),s("br"),s("span",{staticClass:"line-number"},[a._v("144")]),s("br"),s("span",{staticClass:"line-number"},[a._v("145")]),s("br"),s("span",{staticClass:"line-number"},[a._v("146")]),s("br"),s("span",{staticClass:"line-number"},[a._v("147")]),s("br"),s("span",{staticClass:"line-number"},[a._v("148")]),s("br"),s("span",{staticClass:"line-number"},[a._v("149")]),s("br"),s("span",{staticClass:"line-number"},[a._v("150")]),s("br"),s("span",{staticClass:"line-number"},[a._v("151")]),s("br"),s("span",{staticClass:"line-number"},[a._v("152")]),s("br"),s("span",{staticClass:"line-number"},[a._v("153")]),s("br"),s("span",{staticClass:"line-number"},[a._v("154")]),s("br"),s("span",{staticClass:"line-number"},[a._v("155")]),s("br"),s("span",{staticClass:"line-number"},[a._v("156")]),s("br"),s("span",{staticClass:"line-number"},[a._v("157")]),s("br"),s("span",{staticClass:"line-number"},[a._v("158")]),s("br"),s("span",{staticClass:"line-number"},[a._v("159")]),s("br"),s("span",{staticClass:"line-number"},[a._v("160")]),s("br"),s("span",{staticClass:"line-number"},[a._v("161")]),s("br"),s("span",{staticClass:"line-number"},[a._v("162")]),s("br"),s("span",{staticClass:"line-number"},[a._v("163")]),s("br"),s("span",{staticClass:"line-number"},[a._v("164")]),s("br"),s("span",{staticClass:"line-number"},[a._v("165")]),s("br"),s("span",{staticClass:"line-number"},[a._v("166")]),s("br"),s("span",{staticClass:"line-number"},[a._v("167")]),s("br"),s("span",{staticClass:"line-number"},[a._v("168")]),s("br"),s("span",{staticClass:"line-number"},[a._v("169")]),s("br"),s("span",{staticClass:"line-number"},[a._v("170")]),s("br"),s("span",{staticClass:"line-number"},[a._v("171")]),s("br"),s("span",{staticClass:"line-number"},[a._v("172")]),s("br"),s("span",{staticClass:"line-number"},[a._v("173")]),s("br"),s("span",{staticClass:"line-number"},[a._v("174")]),s("br"),s("span",{staticClass:"line-number"},[a._v("175")]),s("br"),s("span",{staticClass:"line-number"},[a._v("176")]),s("br"),s("span",{staticClass:"line-number"},[a._v("177")]),s("br"),s("span",{staticClass:"line-number"},[a._v("178")]),s("br"),s("span",{staticClass:"line-number"},[a._v("179")]),s("br"),s("span",{staticClass:"line-number"},[a._v("180")]),s("br"),s("span",{staticClass:"line-number"},[a._v("181")]),s("br"),s("span",{staticClass:"line-number"},[a._v("182")]),s("br"),s("span",{staticClass:"line-number"},[a._v("183")]),s("br"),s("span",{staticClass:"line-number"},[a._v("184")]),s("br"),s("span",{staticClass:"line-number"},[a._v("185")]),s("br"),s("span",{staticClass:"line-number"},[a._v("186")]),s("br"),s("span",{staticClass:"line-number"},[a._v("187")]),s("br"),s("span",{staticClass:"line-number"},[a._v("188")]),s("br"),s("span",{staticClass:"line-number"},[a._v("189")]),s("br"),s("span",{staticClass:"line-number"},[a._v("190")]),s("br"),s("span",{staticClass:"line-number"},[a._v("191")]),s("br"),s("span",{staticClass:"line-number"},[a._v("192")]),s("br"),s("span",{staticClass:"line-number"},[a._v("193")]),s("br"),s("span",{staticClass:"line-number"},[a._v("194")]),s("br"),s("span",{staticClass:"line-number"},[a._v("195")]),s("br"),s("span",{staticClass:"line-number"},[a._v("196")]),s("br"),s("span",{staticClass:"line-number"},[a._v("197")]),s("br"),s("span",{staticClass:"line-number"},[a._v("198")]),s("br"),s("span",{staticClass:"line-number"},[a._v("199")]),s("br"),s("span",{staticClass:"line-number"},[a._v("200")]),s("br"),s("span",{staticClass:"line-number"},[a._v("201")]),s("br"),s("span",{staticClass:"line-number"},[a._v("202")]),s("br"),s("span",{staticClass:"line-number"},[a._v("203")]),s("br"),s("span",{staticClass:"line-number"},[a._v("204")]),s("br"),s("span",{staticClass:"line-number"},[a._v("205")]),s("br"),s("span",{staticClass:"line-number"},[a._v("206")]),s("br"),s("span",{staticClass:"line-number"},[a._v("207")]),s("br"),s("span",{staticClass:"line-number"},[a._v("208")]),s("br"),s("span",{staticClass:"line-number"},[a._v("209")]),s("br"),s("span",{staticClass:"line-number"},[a._v("210")]),s("br"),s("span",{staticClass:"line-number"},[a._v("211")]),s("br"),s("span",{staticClass:"line-number"},[a._v("212")]),s("br"),s("span",{staticClass:"line-number"},[a._v("213")]),s("br"),s("span",{staticClass:"line-number"},[a._v("214")]),s("br"),s("span",{staticClass:"line-number"},[a._v("215")]),s("br"),s("span",{staticClass:"line-number"},[a._v("216")]),s("br"),s("span",{staticClass:"line-number"},[a._v("217")]),s("br"),s("span",{staticClass:"line-number"},[a._v("218")]),s("br"),s("span",{staticClass:"line-number"},[a._v("219")]),s("br"),s("span",{staticClass:"line-number"},[a._v("220")]),s("br"),s("span",{staticClass:"line-number"},[a._v("221")]),s("br"),s("span",{staticClass:"line-number"},[a._v("222")]),s("br"),s("span",{staticClass:"line-number"},[a._v("223")]),s("br"),s("span",{staticClass:"line-number"},[a._v("224")]),s("br"),s("span",{staticClass:"line-number"},[a._v("225")]),s("br"),s("span",{staticClass:"line-number"},[a._v("226")]),s("br"),s("span",{staticClass:"line-number"},[a._v("227")]),s("br"),s("span",{staticClass:"line-number"},[a._v("228")]),s("br"),s("span",{staticClass:"line-number"},[a._v("229")]),s("br"),s("span",{staticClass:"line-number"},[a._v("230")]),s("br"),s("span",{staticClass:"line-number"},[a._v("231")]),s("br"),s("span",{staticClass:"line-number"},[a._v("232")]),s("br"),s("span",{staticClass:"line-number"},[a._v("233")]),s("br"),s("span",{staticClass:"line-number"},[a._v("234")]),s("br"),s("span",{staticClass:"line-number"},[a._v("235")]),s("br"),s("span",{staticClass:"line-number"},[a._v("236")]),s("br"),s("span",{staticClass:"line-number"},[a._v("237")]),s("br"),s("span",{staticClass:"line-number"},[a._v("238")]),s("br"),s("span",{staticClass:"line-number"},[a._v("239")]),s("br"),s("span",{staticClass:"line-number"},[a._v("240")]),s("br"),s("span",{staticClass:"line-number"},[a._v("241")]),s("br"),s("span",{staticClass:"line-number"},[a._v("242")]),s("br"),s("span",{staticClass:"line-number"},[a._v("243")]),s("br"),s("span",{staticClass:"line-number"},[a._v("244")]),s("br"),s("span",{staticClass:"line-number"},[a._v("245")]),s("br"),s("span",{staticClass:"line-number"},[a._v("246")]),s("br"),s("span",{staticClass:"line-number"},[a._v("247")]),s("br"),s("span",{staticClass:"line-number"},[a._v("248")]),s("br"),s("span",{staticClass:"line-number"},[a._v("249")]),s("br"),s("span",{staticClass:"line-number"},[a._v("250")]),s("br"),s("span",{staticClass:"line-number"},[a._v("251")]),s("br"),s("span",{staticClass:"line-number"},[a._v("252")]),s("br"),s("span",{staticClass:"line-number"},[a._v("253")]),s("br"),s("span",{staticClass:"line-number"},[a._v("254")]),s("br"),s("span",{staticClass:"line-number"},[a._v("255")]),s("br"),s("span",{staticClass:"line-number"},[a._v("256")]),s("br"),s("span",{staticClass:"line-number"},[a._v("257")]),s("br"),s("span",{staticClass:"line-number"},[a._v("258")]),s("br"),s("span",{staticClass:"line-number"},[a._v("259")]),s("br"),s("span",{staticClass:"line-number"},[a._v("260")]),s("br"),s("span",{staticClass:"line-number"},[a._v("261")]),s("br"),s("span",{staticClass:"line-number"},[a._v("262")]),s("br"),s("span",{staticClass:"line-number"},[a._v("263")]),s("br"),s("span",{staticClass:"line-number"},[a._v("264")]),s("br"),s("span",{staticClass:"line-number"},[a._v("265")]),s("br"),s("span",{staticClass:"line-number"},[a._v("266")]),s("br"),s("span",{staticClass:"line-number"},[a._v("267")]),s("br"),s("span",{staticClass:"line-number"},[a._v("268")]),s("br"),s("span",{staticClass:"line-number"},[a._v("269")]),s("br"),s("span",{staticClass:"line-number"},[a._v("270")]),s("br"),s("span",{staticClass:"line-number"},[a._v("271")]),s("br"),s("span",{staticClass:"line-number"},[a._v("272")]),s("br"),s("span",{staticClass:"line-number"},[a._v("273")]),s("br"),s("span",{staticClass:"line-number"},[a._v("274")]),s("br"),s("span",{staticClass:"line-number"},[a._v("275")]),s("br"),s("span",{staticClass:"line-number"},[a._v("276")]),s("br"),s("span",{staticClass:"line-number"},[a._v("277")]),s("br"),s("span",{staticClass:"line-number"},[a._v("278")]),s("br"),s("span",{staticClass:"line-number"},[a._v("279")]),s("br"),s("span",{staticClass:"line-number"},[a._v("280")]),s("br"),s("span",{staticClass:"line-number"},[a._v("281")]),s("br"),s("span",{staticClass:"line-number"},[a._v("282")]),s("br"),s("span",{staticClass:"line-number"},[a._v("283")]),s("br"),s("span",{staticClass:"line-number"},[a._v("284")]),s("br"),s("span",{staticClass:"line-number"},[a._v("285")]),s("br"),s("span",{staticClass:"line-number"},[a._v("286")]),s("br"),s("span",{staticClass:"line-number"},[a._v("287")]),s("br"),s("span",{staticClass:"line-number"},[a._v("288")]),s("br"),s("span",{staticClass:"line-number"},[a._v("289")]),s("br"),s("span",{staticClass:"line-number"},[a._v("290")]),s("br"),s("span",{staticClass:"line-number"},[a._v("291")]),s("br"),s("span",{staticClass:"line-number"},[a._v("292")]),s("br"),s("span",{staticClass:"line-number"},[a._v("293")]),s("br"),s("span",{staticClass:"line-number"},[a._v("294")]),s("br"),s("span",{staticClass:"line-number"},[a._v("295")]),s("br"),s("span",{staticClass:"line-number"},[a._v("296")]),s("br"),s("span",{staticClass:"line-number"},[a._v("297")]),s("br"),s("span",{staticClass:"line-number"},[a._v("298")]),s("br"),s("span",{staticClass:"line-number"},[a._v("299")]),s("br"),s("span",{staticClass:"line-number"},[a._v("300")]),s("br"),s("span",{staticClass:"line-number"},[a._v("301")]),s("br"),s("span",{staticClass:"line-number"},[a._v("302")]),s("br"),s("span",{staticClass:"line-number"},[a._v("303")]),s("br"),s("span",{staticClass:"line-number"},[a._v("304")]),s("br"),s("span",{staticClass:"line-number"},[a._v("305")]),s("br"),s("span",{staticClass:"line-number"},[a._v("306")]),s("br"),s("span",{staticClass:"line-number"},[a._v("307")]),s("br"),s("span",{staticClass:"line-number"},[a._v("308")]),s("br"),s("span",{staticClass:"line-number"},[a._v("309")]),s("br"),s("span",{staticClass:"line-number"},[a._v("310")]),s("br"),s("span",{staticClass:"line-number"},[a._v("311")]),s("br"),s("span",{staticClass:"line-number"},[a._v("312")]),s("br"),s("span",{staticClass:"line-number"},[a._v("313")]),s("br"),s("span",{staticClass:"line-number"},[a._v("314")]),s("br"),s("span",{staticClass:"line-number"},[a._v("315")]),s("br"),s("span",{staticClass:"line-number"},[a._v("316")]),s("br"),s("span",{staticClass:"line-number"},[a._v("317")]),s("br"),s("span",{staticClass:"line-number"},[a._v("318")]),s("br"),s("span",{staticClass:"line-number"},[a._v("319")]),s("br"),s("span",{staticClass:"line-number"},[a._v("320")]),s("br"),s("span",{staticClass:"line-number"},[a._v("321")]),s("br"),s("span",{staticClass:"line-number"},[a._v("322")]),s("br"),s("span",{staticClass:"line-number"},[a._v("323")]),s("br"),s("span",{staticClass:"line-number"},[a._v("324")]),s("br"),s("span",{staticClass:"line-number"},[a._v("325")]),s("br"),s("span",{staticClass:"line-number"},[a._v("326")]),s("br"),s("span",{staticClass:"line-number"},[a._v("327")]),s("br"),s("span",{staticClass:"line-number"},[a._v("328")]),s("br"),s("span",{staticClass:"line-number"},[a._v("329")]),s("br"),s("span",{staticClass:"line-number"},[a._v("330")]),s("br"),s("span",{staticClass:"line-number"},[a._v("331")]),s("br"),s("span",{staticClass:"line-number"},[a._v("332")]),s("br"),s("span",{staticClass:"line-number"},[a._v("333")]),s("br"),s("span",{staticClass:"line-number"},[a._v("334")]),s("br"),s("span",{staticClass:"line-number"},[a._v("335")]),s("br"),s("span",{staticClass:"line-number"},[a._v("336")]),s("br"),s("span",{staticClass:"line-number"},[a._v("337")]),s("br"),s("span",{staticClass:"line-number"},[a._v("338")]),s("br"),s("span",{staticClass:"line-number"},[a._v("339")]),s("br"),s("span",{staticClass:"line-number"},[a._v("340")]),s("br"),s("span",{staticClass:"line-number"},[a._v("341")]),s("br"),s("span",{staticClass:"line-number"},[a._v("342")]),s("br"),s("span",{staticClass:"line-number"},[a._v("343")]),s("br"),s("span",{staticClass:"line-number"},[a._v("344")]),s("br"),s("span",{staticClass:"line-number"},[a._v("345")]),s("br"),s("span",{staticClass:"line-number"},[a._v("346")]),s("br"),s("span",{staticClass:"line-number"},[a._v("347")]),s("br"),s("span",{staticClass:"line-number"},[a._v("348")]),s("br"),s("span",{staticClass:"line-number"},[a._v("349")]),s("br"),s("span",{staticClass:"line-number"},[a._v("350")]),s("br"),s("span",{staticClass:"line-number"},[a._v("351")]),s("br"),s("span",{staticClass:"line-number"},[a._v("352")]),s("br"),s("span",{staticClass:"line-number"},[a._v("353")]),s("br"),s("span",{staticClass:"line-number"},[a._v("354")]),s("br"),s("span",{staticClass:"line-number"},[a._v("355")]),s("br"),s("span",{staticClass:"line-number"},[a._v("356")]),s("br"),s("span",{staticClass:"line-number"},[a._v("357")]),s("br"),s("span",{staticClass:"line-number"},[a._v("358")]),s("br"),s("span",{staticClass:"line-number"},[a._v("359")]),s("br"),s("span",{staticClass:"line-number"},[a._v("360")]),s("br"),s("span",{staticClass:"line-number"},[a._v("361")]),s("br"),s("span",{staticClass:"line-number"},[a._v("362")]),s("br"),s("span",{staticClass:"line-number"},[a._v("363")]),s("br"),s("span",{staticClass:"line-number"},[a._v("364")]),s("br"),s("span",{staticClass:"line-number"},[a._v("365")]),s("br"),s("span",{staticClass:"line-number"},[a._v("366")]),s("br"),s("span",{staticClass:"line-number"},[a._v("367")]),s("br"),s("span",{staticClass:"line-number"},[a._v("368")]),s("br"),s("span",{staticClass:"line-number"},[a._v("369")]),s("br"),s("span",{staticClass:"line-number"},[a._v("370")]),s("br"),s("span",{staticClass:"line-number"},[a._v("371")]),s("br"),s("span",{staticClass:"line-number"},[a._v("372")]),s("br"),s("span",{staticClass:"line-number"},[a._v("373")]),s("br"),s("span",{staticClass:"line-number"},[a._v("374")]),s("br"),s("span",{staticClass:"line-number"},[a._v("375")]),s("br"),s("span",{staticClass:"line-number"},[a._v("376")]),s("br"),s("span",{staticClass:"line-number"},[a._v("377")]),s("br"),s("span",{staticClass:"line-number"},[a._v("378")]),s("br"),s("span",{staticClass:"line-number"},[a._v("379")]),s("br"),s("span",{staticClass:"line-number"},[a._v("380")]),s("br"),s("span",{staticClass:"line-number"},[a._v("381")]),s("br"),s("span",{staticClass:"line-number"},[a._v("382")]),s("br"),s("span",{staticClass:"line-number"},[a._v("383")]),s("br"),s("span",{staticClass:"line-number"},[a._v("384")]),s("br"),s("span",{staticClass:"line-number"},[a._v("385")]),s("br"),s("span",{staticClass:"line-number"},[a._v("386")]),s("br"),s("span",{staticClass:"line-number"},[a._v("387")]),s("br"),s("span",{staticClass:"line-number"},[a._v("388")]),s("br"),s("span",{staticClass:"line-number"},[a._v("389")]),s("br"),s("span",{staticClass:"line-number"},[a._v("390")]),s("br"),s("span",{staticClass:"line-number"},[a._v("391")]),s("br"),s("span",{staticClass:"line-number"},[a._v("392")]),s("br"),s("span",{staticClass:"line-number"},[a._v("393")]),s("br"),s("span",{staticClass:"line-number"},[a._v("394")]),s("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);