(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{546:function(e,t,s){"use strict";s.r(t);var v=s(2),_=Object(v.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"kubernetes研究"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes研究"}},[e._v("#")]),e._v(" kubernetes研究")]),e._v(" "),t("h2",{attrs:{id:"什么是-kubernetes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是-kubernetes"}},[e._v("#")]),e._v(" 什么是 Kubernetes？")]),e._v(" "),t("p",[e._v("Kubernetes是一个可移植的，可扩展的开源平台，用于管理容器化的工作负载和服务，可促进声明式配置和自动化。它拥有一个庞大且开素增长的生态系统。 Kubernetes的服务，支持和工具广泛可用。")]),e._v(" "),t("h2",{attrs:{id:"容器部署时代"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#容器部署时代"}},[e._v("#")]),e._v(" 容器部署时代")]),e._v(" "),t("p",[e._v("容器类似于VM，但是它们具有轻松的隔离属性，可以在应用程序之间共享操作系统（OS）。因此，容器被认为是轻质的。与VM相似，容齐具有自己的文件系统，CPU，内存，进程空间等。由于它们与基础架构分离，因此可以跨云和OS分发进行移植。容齐之所以受欢迎，是因为它提供了额外的好处，例如：")]),e._v(" "),t("ul",[t("li",[e._v("敏捷的应用程序创建和部署：与使用VM映像相比，容器映像创建的简便性和效率更高")]),e._v(" "),t("li",[e._v("持续的开发，集成和部署：通过快速简单的回滚（由于图像不可更改），提供可靠且频繁的容器映像构建和部署。")]),e._v(" "),t("li",[e._v("开发和运营的关注点分离：在构建/发布时而不是在部署时创建应用程序容器映像，从而将应用程序与基础架构分离。")]),e._v(" "),t("li",[e._v("可观察性不仅可以显示操作系统级别的信息和指标，还可以显示应用程序的运行状况和其他信号。")]),e._v(" "),t("li",[e._v("跨开发，测试和生产的环境一致性：在便携式计算机上与在云中相同地运行。")]),e._v(" "),t("li",[e._v("云和操作系统分发的可移植性：可在Ubuntu，RHEL，CoreOS，本地，Google Kubernetes Engine和其他任何地方运行。")]),e._v(" "),t("li",[e._v("以应用程序为中心的管理：提高抽象级别，从在虚拟硬件上运行OS到使用逻辑资源在OS上运行应用程序。")]),e._v(" "),t("li",[e._v("松散耦合，分布式，弹性，解放的微服务：应用程序被分解成较小的独立部分，并且可以动态部署和管理–而不是在一台大型单机上运行的单片堆栈。")]),e._v(" "),t("li",[e._v("资源隔离：可预测的应用程序性能。")]),e._v(" "),t("li",[e._v("资源利用：高效率和高密度。")])]),e._v(" "),t("h2",{attrs:{id:"为什么需要kubernetes以及它能做什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要kubernetes以及它能做什么"}},[e._v("#")]),e._v(" 为什么需要Kubernetes以及它能做什么")]),e._v(" "),t("p",[e._v("容器是捆绑和运行应用程序的好方法。在生产环境中，您需要管理运行应用程序的容器，并确保没有停机时间。例如，如果一个容器发生故障，则需要启动另一个容器。如果系统处理此行为，会不会更容易？")]),e._v(" "),t("p",[e._v("这就是Kubernetes的救援方法！Kubernetes为您提供了一个可弹性运行分布式系统的框架。它负责应用程序的扩展和故障转移，提供部署模式等。例如，Kubernetes可以轻松管理系统的Canary部署。")]),e._v(" "),t("p",[e._v("Kubernetes为您提供：")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("服务发现和负载均衡")])])]),e._v(" "),t("p",[e._v("Kubernetes可以使用DNS名称或使用其自己的IP地址公开容器。如果到容器流量很高，Kubernetes可以负载平衡并分配网络流量，从而使部署稳定。")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("存储编排")])])]),e._v(" "),t("p",[e._v("Kubernetes允许您自动挂载您选择的存储系统，例如本地存储，公共云提供商等。")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("存储部署和回滚")])])]),e._v(" "),t("p",[e._v("您可以使用Kubernetes为部署的容器描述所需的状态，它可以以受控的速率将实际状态改为所需的状态。例如，您可以自动化Kubernetes来为您部署新容器，删除现有容器并将其所有资源用于新容器")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("自动垃圾箱打包")])])]),e._v(" "),t("p",[e._v("您为Kubernetes提供了一个节点集群，可用于运行容器化任务。您告诉Kubernetes每个容器需要多少CPU和内存（RAM）。 Kubernetes可以将容器安装到您的节点上，以充分利用您的资源。")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("自我修复的")])])]),e._v(" "),t("p",[e._v("Kubernetes会重启失败的容器，替换容器，杀死对用户定义的运行状况检查没有响应的容器，并且在准备好服务之前不会将其通告给客户端")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("秘密和配置管理")])])]),e._v(" "),t("p",[e._v("Kubernetes允许您存储和管理敏感信息，例如密码，OAuth令牌和ssh密钥。您可以部署和更新机密和应用程序配置，而无需重建容器映像，也无需在堆栈配置中公开机密")])])}),[],!1,null,null,null);t.default=_.exports}}]);